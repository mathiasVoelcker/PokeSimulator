{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/moves/move-domain.ts","./src/app/moves/move-dropdown/move-dropdown.component.ts","./src/app/shared/layouts/advanced-dropdown/advanced-dropdown.component.html","./src/app/moves/move.service.ts","./src/app/nature/nature-domain.ts","./src/app/nature/nature-dropdown/nature-dropdown.component.ts","./src/app/nature/nature.service.ts","./src/app/pokemon/entities/pokemon.ts","./src/app/pokemon/pokemon-domain.ts","./src/app/pokemon/pokemon-register/pokemon-register.component.ts","./src/app/pokemon/pokemon-register/pokemon-register.component.html","./src/app/pokemon/pokemon-search/pokemon-search.component.ts","./src/app/pokemon/pokemon-search/pokemon-search.component.html","./src/app/pokemon/pokemon-species.service.ts","./src/app/pokemon/pokemon.service.ts","./src/app/shared/enums/move-category.enum.ts","./src/app/shared/enums/stat.enum.ts","./src/app/shared/layouts/advanced-dropdown/advanced-dropdown.component.ts","./src/app/shared/layouts/basic-dropdown/basic-dropdown-entity.ts","./src/app/shared/layouts/basic-dropdown/basic-dropdown.component.ts","./src/app/shared/layouts/basic-dropdown/basic-dropdown.component.html","./src/app/shared/layouts/header/header.component.ts","./src/app/shared/layouts/header/header.component.html","./src/app/shared/pipes/move-category.pipe.ts","./src/app/shared/pipes/stat.pipe.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/main.service.ts","./src/app/simulation/simulation-card/simulation-card.component.ts","./src/app/simulation/simulation-card/simulation-card.component.html","./src/app/simulation/simulation-pokemon.ts","./src/app/simulation/simulation.service.ts","./src/app/simulation/simulation/simulation.component.ts","./src/app/simulation/simulation/simulation.component.html","./src/app/user/entities/user.ts","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/sign-up/sign-up.component.ts","./src/app/user/sign-up/sign-up.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\nimport { PokemonSearchComponent } from './pokemon/pokemon-search/pokemon-search.component';\nimport { PokemonRegisterComponent } from './pokemon/pokemon-register/pokemon-register.component';\nimport { SimulationComponent } from './simulation/simulation/simulation.component';\n\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', component: HomeComponent},\n  { path: 'login', pathMatch: 'full', component: LoginComponent },\n  { path: 'sign_up', pathMatch: 'full', component: SignUpComponent },\n  { path: 'search', component: PokemonSearchComponent },\n  { path: 'pokemon', component: PokemonRegisterComponent},\n  { path: 'pokemon/:species_id', component: PokemonRegisterComponent },\n  { path: 'pokemon/:pokemon_id/:isEdit', component: PokemonRegisterComponent },\n  { path: 'simulation', component: SimulationComponent },\n  { path: 'simulation/:id', component: SimulationComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'pokeSimulatorFront';\n}\n","<app-header></app-header>\n<div class=\"content-wrapper\">\n    <div class=\"container\">        \n        <router-outlet></router-outlet>\n    </div>\n</div>\n","import { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './shared/layouts/header/header.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PokemonSearchComponent } from './pokemon/pokemon-search/pokemon-search.component';\nimport { PokemonSpeciesService } from './pokemon/pokemon-species.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PokemonRegisterComponent } from './pokemon/pokemon-register/pokemon-register.component';\nimport { BasicDropdownComponent } from './shared/layouts/basic-dropdown/basic-dropdown.component';\nimport { NatureService } from './nature/nature.service';\nimport { StatPipe } from './shared/pipes/stat.pipe';\nimport { MoveCategoryPipe } from './shared/pipes/move-category.pipe';\nimport { PokemonService } from './pokemon/pokemon.service';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SimulationComponent } from './simulation/simulation/simulation.component';\nimport { SimulationCardComponent } from './simulation/simulation-card/simulation-card.component';\nimport { SimulationService } from './simulation/simulation.service';\nimport { LoginComponent } from './user/login/login.component';\nimport { AuthService } from './shared/services/auth.service';\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\nimport { NatureDropdownComponent } from './nature/nature-dropdown/nature-dropdown.component';\nimport { AdvancedDropdownComponent } from './shared/layouts/advanced-dropdown/advanced-dropdown.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MoveDropdownComponent } from './moves/move-dropdown/move-dropdown.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    PokemonSearchComponent,\n    PokemonRegisterComponent,\n    BasicDropdownComponent,\n    StatPipe,\n    MoveCategoryPipe,\n    SimulationComponent,\n    SimulationCardComponent,\n    LoginComponent,\n    SignUpComponent,\n    AdvancedDropdownComponent,\n    NatureDropdownComponent,\n    MoveDropdownComponent,\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    AppRoutingModule,\n    ToastrModule.forRoot(),\n  ],\n  providers: [\n    PokemonSpeciesService,\n    PokemonService,\n    NatureService,\n    SimulationService,\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { PokemonService } from '../pokemon/pokemon.service';\nimport { Pokemon } from '../pokemon/entities/pokemon';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../shared/services/auth.service';\nimport { FormControl } from '@angular/forms';\nimport { PokemonDomain } from '../pokemon/pokemon-domain';\nimport { PokemonSpecies } from '../pokemon/entities/pokemon-species';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  pokemons: Pokemon[];\n\n  myControl = new FormControl();\n  tests: string[] = ['One', 'Two', 'Three'];\n\n  constructor(\n    private pokemonService: PokemonService,\n    private authService: AuthService,\n    private toastr: ToastrService,\n    private router: Router\n    ) {\n      this.myControl.valueChanges.subscribe(newValue=>{\n        this.tests = this.testMethod();\n    })\n    }\n\n  ngOnInit() {\n    // if (this.isLogged()) {\n      this.listPokemons();\n    // }\n  }\n\n  get isListPokemonsEmpty(): boolean {\n    return !this.pokemons || this.pokemons.length == 0;\n  }\n\n  testMethod() {\n    return [\"one\", \"two\", \"three\"];\n  }\n\n  listPokemons() {\n    this.pokemonService.listPokemons().subscribe(resp => {\n      this.pokemons = resp;\n    });\n  }\n\n  deletePokemon(pokemon_id: number) {\n    this.pokemonService.deletePokemon(pokemon_id).subscribe(resp => {\n      this.listPokemons();\n      this.toastr.success('Pokemon was deleted succesfully');\n    })\n  }\n\n  editPokemon(pokemon_id: number) {\n    this.router.navigate([`/pokemon`, pokemon_id, \"isEdit\"]);\n  }\n\n  simulateBattle(id: number) {\n    this.router.navigate([`/simulation`, id]);\n  }\n\n  getCSSClass() {\n    if (window.innerWidth <= 760) {\n      return 'collapse';\n    }\n    return '';\n  }\n\n  isLogged() {\n    return this.authService.isLogged();\n  }\n\n  getImgUrl(pokemonSpecies: PokemonSpecies) {\n    return PokemonDomain.getImgUrl(pokemonSpecies);\n  }\n\n}\n","<!-- <div *ngIf=\"isLogged()\"> -->\n  <div *ngIf=\"isListPokemonsEmpty\">\n    <p>No Pokemons registered yet. Click <a href=\"/search\">here</a> to save your pokemons</p>\n  </div>\n\n  <div *ngIf=\"!isListPokemonsEmpty\">\n    <h1>Pokemons</h1>\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Pokemon species</th>\n          <th>Level</th>\n          <th [class]=\"getCSSClass()\">Attack</th>\n          <th [class]=\"getCSSClass()\">Defense</th>\n          <th [class]=\"getCSSClass()\">Special Attack</th>\n          <th [class]=\"getCSSClass()\">Special Defense</th>\n          <th [class]=\"getCSSClass()\">Speed</th>\n          <th [class]=\"getCSSClass()\">HP</th>\n          <th colspan=\"3\">Actions</th>\n        </tr>\n      </thead>\n      \n      <tbody>\n        <ng-container *ngFor=\"let pokemon of pokemons\">\n          <tr class=\"u-align-v-center\">\n            <td>\n              <img class=\"pokemon-img-small\" [src]=\"getImgUrl(pokemon.pokemonSpecies)\">\n              {{ pokemon.pokemonSpecies.name.toUpperCase() }}\n            </td>\n            <td>{{ pokemon.level }}</td>\n            <td [class]=\"getCSSClass()\">{{ pokemon.attack }}</td>\n            <td [class]=\"getCSSClass()\">{{ pokemon.defense }}</td>\n            <td [class]=\"getCSSClass()\">{{ pokemon.spAttack }}</td>\n            <td [class]=\"getCSSClass()\">{{ pokemon.spDefense }}</td>\n            <td [class]=\"getCSSClass()\">{{ pokemon.speed }}</td>\n            <td [class]=\"getCSSClass()\">{{ pokemon.hp }}</td>\n            <td><a class=\"table-button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Simulate Battle!\" (click)=\"simulateBattle(pokemon.id)\">\n              <span class=\"glyphicon glyphicon-flash\" aria-hidden=\"true\"></span>\n            </a></td>\n            <td *ngIf=\"isLogged()\"><a class=\"table-button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit Pokemon\" (click)=\"editPokemon(pokemon.id)\">\n              <span class=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\n            </a></td>\n            <td *ngIf=\"isLogged()\"><a class=\"table-button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete Pokemon\" (click)=\"deletePokemon(pokemon.id)\">\n              <span class=\"glyphicon glyphicon-trash\" aria-hidden=\"true\"></span>\n            </a></td>\n          </tr>\n        </ng-container>\n      </tbody>\n    </table>\n  </div>\n<!-- </div> -->\n<!-- <div *ngIf=\"!isLogged()\">\n  <p>You are not logged in. Click <a href=\"/login\">here to <b>log in</b></a> and list your Pokemons or <a href=\"/sign_up\">here to <b>sign up</b></a></p>\n</div> -->\n","import { Move } from './move';\n\nexport class MoveDomain {\n\n  static setMoveName(move: Move) {\n    return `${move.name} - Power: ${move.basePower} - ${move.category}`\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AdvancedDropdownComponent } from '../../shared/layouts/advanced-dropdown/advanced-dropdown.component';\nimport { Move } from '../move';\n\n@Component({\n  selector: 'app-move-dropdown',\n  templateUrl: '../../shared/layouts/advanced-dropdown/advanced-dropdown.component.html'\n})\nexport class MoveDropdownComponent extends AdvancedDropdownComponent {\n\n  @Input()\n  moves: Move[];\n\n  constructor() {\n    super();\n    this.list.valueChanges.subscribe(text => {\n      this.setItem(text);\n    });\n  }\n\n  get shownItems() {\n    const text: string = this.list.value\n    if (!this.moves) return null\n    if (!text) return this.moves.map(x => x.name);\n    return this.moves.filter(x =>\n      x.name\n      .toUpperCase()\n      .includes(text.toUpperCase()))\n      .map(x => x.name);\n  }\n\n  setItem(text: string) {\n    if (!!text) {\n      this.selected.emit(\n        this.moves.find(x => x.name.toUpperCase().includes(text.toUpperCase()))\n        );\n    }\n  }\n}\n","  <mat-form-field style=\"width: 100%;\">\n    <input type=\"text\" matInput [(ngModel)]=\"inputLabel\" [placeholder]=\"placeholder\" [formControl]=\"list\" [matAutocomplete]=\"auto\"/>\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let item of shownItems\" [value]=\"item\">{{ item }}</mat-option>\n      </mat-autocomplete>\n  </mat-form-field>\n\n\n","import { Injectable } from '@angular/core';\nimport { MainService } from '../shared/services/main.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Move } from './move';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoveService extends MainService {\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super('moves/');\n  }\n\n  listMoves(): Observable<Move[]> {\n    return this.http.get<Move[]>(`${this.url}getAll/`)\n  }\n\n}\n","import { Nature } from './nature';\nimport { StatPipe } from '../shared/pipes/stat.pipe';\n\nexport class NatureDomain {\n\n  static defineNatureText(nature: Nature) {\n    if (!nature) return null;\n    if (!nature.strongStat && !nature.weakStat) {\n      return `${nature.name}: Neutral`;\n    }\n    return `${nature.name} - Strong: ${StatPipe.prototype.transform(nature.strongStat)} - Weak: ${StatPipe.prototype.transform(nature.weakStat)}`;\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Nature } from '../nature';\nimport { AdvancedDropdownComponent } from '../../shared/layouts/advanced-dropdown/advanced-dropdown.component';\nimport { StatPipe } from '../../shared/pipes/stat.pipe';\n\n@Component({\n  selector: 'app-nature-dropdown',\n  templateUrl: '../../shared/layouts/advanced-dropdown/advanced-dropdown.component.html',\n})\nexport class NatureDropdownComponent extends AdvancedDropdownComponent {\n\n  @Input()\n  natures: Nature[];\n\n  constructor() {\n    super();\n  }\n\n  get shownItems() {\n    const text: string = this.list.value\n    if (!this.natures) return null;\n    if (!text) return this.natures.map(x => x.name);\n    return this.natures.filter(x =>\n      x.name\n      .toUpperCase()\n      .includes(text.toUpperCase()))\n      .map(x => x.name);\n  }\n\n  setItem(text: string) {\n    debugger;\n    if (!!text) {\n      this.selected.emit(\n        this.natures.find(x => x.name.toUpperCase().includes(text.toUpperCase()))\n        );\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MainService } from '../shared/services/main.service';\nimport { Observable } from 'rxjs';\nimport { Nature } from './nature';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class NatureService extends MainService {\n\n  constructor(private http: HttpClient) {\n    super('natures/');\n  }\n\n  listNatures(): Observable<Nature[]> {\n    return this.http.get<Nature[]>(`${this.url}getAll/`);\n  }\n}\n","import { PokemonService } from \"../pokemon.service\";\nimport { PokemonSpecies } from \"./pokemon-species\";\nimport { Move } from \"../../moves/move\";\nimport { Nature } from 'src/app/nature/nature';\n\nexport class Pokemon {\n    id: number;\n    pokemonSpecies: PokemonSpecies;\n    nature: Nature;\n    userId: number;\n    nickname: string;\n    level: number;\n    hp: number;\n    attack: number;\n    defense: number;\n    spAttack: number;\n    spDefense: number\n    speed: number;\n    evHp: number;\n    evAttack: number;\n    evDefense: number;\n    evSpAttack: number;\n    evSpDefense: number\n    evSpeed: number;\n    ivHp: number;\n    ivAttack: number;\n    ivDefense: number;\n    ivSpAttack: number;\n    ivSpDefense: number\n    ivSpeed: number;\n    move1: Move;\n    move2: Move;\n    move3: Move;\n    move4: Move;\n}\n","import { PokemonSpecies } from './entities/pokemon-species';\n\nexport class PokemonDomain {\n\n  static getImgUrl(pokemonSpecies: PokemonSpecies) {\n    if (!!pokemonSpecies) {\n      return `https://img.pokemondb.net/artwork/${pokemonSpecies.name}.jpg`;\n    }\n    return '';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PokemonSpeciesService } from '../pokemon-species.service';\nimport { PokemonSpecies } from '../entities/pokemon-species';\nimport { Nature } from '../../nature/nature';\nimport { NatureService } from '../../nature/nature.service';\nimport { Stat } from '../../shared/enums/stat.enum';\nimport { Pokemon } from '../entities/pokemon';\nimport { PokemonService } from '../pokemon.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { NatureDomain } from '../../nature/nature-domain';\nimport { Move } from '../../moves/move';\nimport { MoveService } from '../../moves/move.service';\nimport { MoveDomain } from '../../moves/move-domain';\nimport { PokemonDomain } from '../pokemon-domain';\n\n@Component({\n  selector: 'app-pokemon-register',\n  templateUrl: './pokemon-register.component.html',\n  styleUrls: ['./pokemon-register.component.css']\n})\nexport class PokemonRegisterComponent implements OnInit {\n\n  speciesIdParam: string;\n  pokemonIdParam: string;\n  pokemon_species: PokemonSpecies;\n  pokemon: Pokemon = new Pokemon();\n  pokemonForm: FormGroup;\n  natures: Nature[];\n  moves: Move[];\n  totalEvLeft: number = 510;\n\n  constructor(\n    private route: ActivatedRoute,\n    private pokemonSpeciesService: PokemonSpeciesService,\n    private pokemonService: PokemonService,\n    private natureService: NatureService,\n    private moveService: MoveService,\n    private toastr: ToastrService,\n    private authService: AuthService,\n    fb: FormBuilder) {\n      this.route.params.subscribe( params => {\n        this.speciesIdParam = params.species_id;\n        this.pokemonIdParam = params.pokemon_id;\n      });\n      this.pokemonForm = fb.group({\n        level: [5, Validators.compose([Validators.required, Validators.min(1), Validators.max(100)])],\n        nature: [null, Validators.compose([Validators.required])],\n        ivHp: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(31)])],\n        ivAttack: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(31)])],\n        ivDefense: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(31)])],\n        ivSpAttack: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(31)])],\n        ivSpDefense: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(31)])],\n        ivSpeed: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(31)])],\n        evHp: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(252)])],\n        evAttack: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(252)])],\n        evDefense: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(252)])],\n        evSpAttack: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(252)])],\n        evSpDefense: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(252)])],\n        evSpeed: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(252)])],\n        move1: [null],\n        move2: [null],\n        move3: [null],\n        move4: [null]\n      });\n      this.initializeObjects();\n      this.pokemonForm.valueChanges.subscribe(values => {\n        this.refreshStats();\n      });\n    }\n\n  ngOnInit(): void {\n    if (!this.isLogged()) {\n      this.toastr.warning(\n        'You have to log in to register a Pokemon',\n        'Warning',\n        { disableTimeOut : true}\n      );\n    }\n  }\n\n  getImgUrl(pokemonSpecies: PokemonSpecies) {\n    return PokemonDomain.getImgUrl(pokemonSpecies);\n  }\n\n  private initializeObjects() {\n    debugger;\n    if (!!this.pokemonIdParam) {\n      this.pokemonService.getPokemon(this.pokemonIdParam).subscribe(resp => {\n        this.pokemon = resp;\n        this.pokemon_species = resp.pokemonSpecies;\n        this.pokemonForm.patchValue(resp);\n      })\n    }\n    else {\n      this.pokemonSpeciesService.getPokemonSpecies(this.speciesIdParam).subscribe(resp => {\n        this.pokemon_species = resp;\n        this.refreshStats();\n      });\n    }\n\n    this.moveService.listMoves().subscribe( resp => {\n      this.moves = resp;\n      this.moves.forEach(move => {\n        move.name = MoveDomain.setMoveName(move);\n      });\n    });\n    this.natureService.listNatures().subscribe( resp => {\n      this.natures = resp;\n      this.natures.forEach(nature => {\n        nature.name = NatureDomain.defineNatureText(nature);\n      });\n    });\n  }\n\n  savePokemon() {\n    let newPokemon: Pokemon = Object.assign(this.pokemon, this.pokemonForm.value);\n    newPokemon.pokemonSpecies = this.pokemon_species;\n    if (!this.pokemonIdParam) {\n      this.pokemonService.savePokemon(newPokemon).subscribe(\n        resp => {\n          this.toastr.success('Pokemon successfully created');\n        },\n        err => {\n          console.log(err);\n          this.toastr.error(err.error.message);\n        });\n    }\n    else {\n      this.pokemonService.updatePokemon(newPokemon, this.pokemonIdParam).subscribe(\n        resp => {\n          this.toastr.success('Pokemon successfully updated');\n        },\n        err => {\n          console.log(err);\n          this.toastr.error(err.error.message);\n        });\n    }\n  \n  }\n\n  isLogged() {\n    return this.authService.isLogged();\n  }\n\n  //STATS\n  validateIVs() {\n    return this.pokemonForm.get('ivHp').valid &&\n      this.pokemonForm.get('ivAttack').valid &&\n      this.pokemonForm.get('ivDefense').valid &&\n      this.pokemonForm.get('ivSpAttack').valid &&\n      this.pokemonForm.get('ivSpDefense').valid &&\n      this.pokemonForm.get('ivSpeed').valid;\n  }\n\n  validateEVs() {\n    return this.pokemonForm.get('evHp').valid &&\n      this.pokemonForm.get('evAttack').valid &&\n      this.pokemonForm.get('evDefense').valid &&\n      this.pokemonForm.get('evSpAttack').valid &&\n      this.pokemonForm.get('evSpDefense').valid &&\n      this.pokemonForm.get('evSpeed').valid;\n  }\n\n  validateEVsTotal() {\n    const ev_total = this.pokemonForm.get('evHp').value +\n    this.pokemonForm.get('evAttack').value +\n    this.pokemonForm.get('evDefense').value +\n    this.pokemonForm.get('evSpAttack').value +\n    this.pokemonForm.get('evSpDefense').value +\n    this.pokemonForm.get('evSpeed').value;\n    this.totalEvLeft = 510 - ev_total;\n    return ev_total <= 510;\n  }\n\n  private refreshStats(){\n    this.pokemon.hp = Math.round(this.calculateHP());\n    this.pokemon.attack = Math.round(this.calculateStat('Attack', Stat.Attack, this.pokemon_species.baseAttack));\n    this.pokemon.defense = Math.round(this.calculateStat('Defense', Stat.Defense, this.pokemon_species.baseDefense));\n    this.pokemon.spAttack = Math.round(this.calculateStat('SpAttack', Stat.SpecialAttack, this.pokemon_species.baseSpAttack));\n    this.pokemon.spDefense = Math.round(this.calculateStat('SpDefense', Stat.SpecialDefense, this.pokemon_species.baseSpDefense));\n    this.pokemon.speed = Math.round(this.calculateStat('Speed', Stat.Speed, this.pokemon_species.baseSpeed));\n  }\n\n  private calculateHP(): number {\n    const iv = this.pokemonForm.get('ivHp').value;\n    const ev = this.pokemonForm.get('evHp').value;\n    const level = this.pokemonForm.get('level').value;\n    return (((this.pokemon_species.baseHp * 2 + iv + ( ev / 4 )) * level ) / 100 ) + level + 10;\n  }\n\n  private calculateStat(statString: string, stat: Stat, baseStat: number): number {\n    const iv = this.pokemonForm.get(`iv${statString}`).value;\n    const ev = this.pokemonForm.get(`ev${statString}`).value;\n    const level = this.pokemonForm.get('level').value;\n    return ((((baseStat * 2 + iv  + ( ev / 4 )) * level ) / 100 ) + 5) * this.calculateNature(stat);\n  }\n\n  //MOVE\n\n  setMove1(move: Move) {\n    this.pokemonForm.get(\"move1\").setValue(move);\n  }\n\n  setMove2(move: number) {\n    this.pokemonForm.get(\"move2\").setValue(move);\n  }\n\n  setMove3(move: number) {\n    this.pokemonForm.get(\"move3\").setValue(move);\n  }\n\n  setMove4(move: number) {\n    this.pokemonForm.get(\"move4\").setValue(move);\n  }\n\n  //NATURE\n\n  setNature(natureId: Nature) {\n    this.pokemonForm.get('nature').setValue(natureId);\n    this.refreshStats();\n  }\n\n  private calculateNature(stat: Stat): number {\n    debugger;\n    const natureSelected = this.pokemonForm.get('nature').value\n    if (!natureSelected) {\n      return 1;\n    }\n    if (natureSelected.strongStat == stat) {\n      return 1.1\n    }\n    if (natureSelected.weakStat == stat) {\n      return 0.9\n    }\n    return 1;\n  }\n\n}\n","<form [formGroup]=\"pokemonForm\" (ngSubmit)=\"savePokemon()\">\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"panel panel-primary\">\n      <div class=\"panel-heading\">\n        <span class=\"title title-casual\">#{{ pokemon_species.id }} {{ pokemon_species.name | uppercase }}</span>\n      </div>\n      <div class=\"panel-body\">\n        <div class=\"row\">\n          <div class=\"col-md-4 col-sm-4\">\n            <div class=\"image-div image-div-big\">\n              <img class=\"pokemon-img-large\" [src]=\"getImgUrl(pokemon_species)\">\n            </div>\n            <div class=\"row\">\n              <span class=\"type type-{{ pokemon_species.firstType.name }}\">\n                {{ pokemon_species.firstType.name | uppercase }}\n              </span>\n              <span *ngIf=\"pokemon_species.secondType\" class=\"type type-{{ pokemon_species.secondType.name }}\">\n                  {{ pokemon_species.secondType.name | uppercase }}\n              </span>\n            </div>\n          </div>\n          <div class=\"col-md-4 col-sm-4 left-div\">\n            <h3>Base Stats</h3>\n            <p>Hp: {{ pokemon_species.baseHp }}</p>\n            <p>Attack: {{ pokemon_species.baseAttack }}</p>\n            <p>Defense: {{ pokemon_species.baseDefense }}</p>\n            <p>Special Attack: {{ pokemon_species.baseSpAttack }}</p>\n            <p>Special Defense: {{ pokemon_species.baseSpDefense }}</p>\n            <p>Speed: {{ pokemon_species.baseSpeed }}</p>\n          </div>\n          <div class=\"col-md-4 col-sm-4\">\n            <div class=\"field\">\n              <label class=\"required-field\">Level</label>\n              <input formControlName=\"level\" class=\"form-control\" type=\"number\">\n            </div>\n            <div class=\"field u-margin-top-medium\">\n                <app-nature-dropdown [natures]=\"natures\" [selectedItem]=\"pokemon.nature\" [placeholder]=\"'Select a nature'\" (selected)=\"setNature($event)\"></app-nature-dropdown>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <h3>Final Stats</h3>\n            <div class=\"field\">\n              <label>HP: </label>\n              <p id=\"pokemonHp\">{{ pokemon.hp }}</p>\n            </div>\n            <div class=\"field\">\n              <label>Attack:</label>\n              <p id=\"pokemonAttack\">{{ pokemon.attack }}</p>\n            </div>\n            <div class=\"field\">\n              <label>Defense:</label>\n              <p id=\"pokemonDefense\">{{ pokemon.defense }}</p>\n            </div>\n            <div class=\"field\">\n              <label>Special Attack:</label>\n              <p id=\"pokemonSpAttack\">{{ pokemon.spAttack }}</p>\n            </div>\n            <div class=\"field\">\n              <label>Special Defense</label>\n              <p id=\"pokemonSpDefense\">{{ pokemon.spDefense }}</p>\n            </div>\n            <div class=\"field\">\n              <span>Speed</span>\n              <p id=\"pokemonSpeed\">{{ pokemon.speed }}</p>\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"col-md-12\">\n              <h3>IVs</h3>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"field\">\n                <label class=\"required-field\">IV Attack</label>\n                <input formControlName=\"ivAttack\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">IV Defense</label>\n                <input formControlName=\"ivDefense\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">IV Special Attack</label>\n                <input formControlName=\"ivSpAttack\" class=\"form-control\" type=\"number\">\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"field\">\n                  <label class=\"required-field\">IV Special Defense</label>\n                <input formControlName=\"ivSpDefense\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">IV Speed</label>\n                <input formControlName=\"ivSpeed\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">IV HP</label>\n                <input formControlName=\"ivHp\" class=\"form-control\" type=\"number\">\n              </div>\n            </div>\n            <p class=\"error-message\" *ngIf=\"!validateIVs()\">All IV must be informed and lower than 31</p>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"col-md-12\">\n              <h3>EVs</h3>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"field\">\n                <label class=\"required-field\">EV Attack</label>\n                <input formControlName=\"evAttack\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">EV Defense</label>\n                <input formControlName=\"evDefense\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">EV Special Attack</label>\n                <input formControlName=\"evSpAttack\" class=\"form-control\" type=\"number\">\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"field\">\n                <label class=\"required-field\">EV Special Defense</label>\n                <input formControlName=\"evSpDefense\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">EV Speed</label>\n                <input formControlName=\"evSpeed\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">EV HP</label>\n                <input formControlName=\"evHp\" class=\"form-control\" type=\"number\">\n              </div>\n            </div>\n            <p>EV points left: {{totalEvLeft}}</p>\n            <p class=\"error-message\" *ngIf=\"!validateEVs()\">All EV must be informed and lower than 252</p>\n            <p class=\"error-message\" *ngIf=\"!validateEVsTotal()\">The some of all EV must be lower than 510</p>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">\n            <div class=\"field\">\n              <app-move-dropdown [moves]=\"moves\" [selectedItem]=\"pokemon.move1\" [placeholder]=\"'Move 1'\" (selected)=\"setMove1($event)\"></app-move-dropdown>\n            </div>\n          </div>\n          <div class=\"col-md-3\">\n            <div class=\"field\">\n                <app-move-dropdown [moves]=\"moves\" [selectedItem]=\"pokemon.move2\" [placeholder]=\"'Move 2'\" (selected)=\"setMove2($event)\"></app-move-dropdown>\n            </div>\n          </div>\n          <div class=\"col-md-3\">\n            <div class=\"field\">\n                <app-move-dropdown [moves]=\"moves\" [selectedItem]=\"pokemon.move3\" [placeholder]=\"'Move 3'\" (selected)=\"setMove3($event)\"></app-move-dropdown>\n            </div>\n          </div>\n          <div class=\"col-md-3\">\n            <div class=\"field\">\n                <app-move-dropdown [moves]=\"moves\" [selectedItem]=\"pokemon.move4\" [placeholder]=\"'Move 4'\" (selected)=\"setMove4($event)\"></app-move-dropdown>\n            </div>\n          </div>\n        </div>\n        <div class=\"actions right-div\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!pokemonForm.valid\">Create Pokemon</button>\n        </div>\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { PokemonSpeciesService } from '../pokemon-species.service';\nimport { PokemonSpecies } from '../entities/pokemon-species';\nimport { PokemonDomain } from '../pokemon-domain';\n\n\n@Component({\n  selector: 'app-pokemon-search',\n  templateUrl: './pokemon-search.component.html',\n  styleUrls: ['./pokemon-search.component.css']\n})\nexport class PokemonSearchComponent {\n\n  pokemonSearchForm: FormGroup;\n  pokemonSpecies: PokemonSpecies[];\n\n  constructor(\n    private pokemonSpeciesServie: PokemonSpeciesService,\n    fb: FormBuilder\n  ) {\n    this.pokemonSearchForm = fb.group({\n      name: []\n    });\n    pokemonSpeciesServie\n  }\n\n  searchPokemons() {\n    this.pokemonSpeciesServie.listPokemonSpecies(\n      this.pokemonSearchForm.get('name').value\n    ).subscribe((resp) => {\n      debugger;\n      this.pokemonSpecies = resp;\n    });\n  }\n\n  getImgUrl(pokemonSpecies: PokemonSpecies) {\n    return PokemonDomain.getImgUrl(pokemonSpecies);\n  }\n\n  getBaseStatTotal(pokemon: PokemonSpecies): number {\n    return pokemon.baseAttack + pokemon.baseDefense + pokemon.baseHp + pokemon.baseSpAttack + pokemon.baseSpDefense + pokemon.baseSpeed;\n  }\n\n}\n","<form [formGroup]=\"pokemonSearchForm\" (ngSubmit)=\"searchPokemons()\">\n  <div class=\"row\">\n    <div class=\"form-group col-md-3\">\n        <input formControlName=\"name\" class=\"form-control\" placeholder=\"Type the name of a pokemon\">\n      </div>\n      <div class=\"form-group col-md-2\">\n        <button type=\"submit\" class=\"btn btn-primary\">Find Pokemon</button>\n    </div>\n  </div>\n</form>\n<div *ngIf=\"pokemonSpecies\" class=\"row\">\n  <div class=\"containter\">\n    <ng-container *ngFor=\"let pokemon of pokemonSpecies;\">\n    <div class=\"col-md-4 col-sm-6 col-xs-12\">\n      <a href=\"pokemon/{{pokemon.id}}\">\n      <div class=\"panel panel-primary panel-link\">\n        <div class=\"panel-heading\">\n          <span>{{ pokemon.name | uppercase }}</span>\n        </div>\n        <div class=\"panel-body\">\n          <div class=\"col-md-4 col-sm-4 image-div image-div-small\">\n            <img class=\"pokemon-img\" [src]=\"getImgUrl(pokemon)\">\n          </div>\n          <div class=\"col-md-8 col-sm-8\">\n            <div class=\"row\">\n              <span class=\"type type-{{pokemon.firstType.name}}\">\n                {{ pokemon.firstType.name | uppercase }}\n              </span>\n              <span *ngIf=\"pokemon.secondType\">\n                <span class=\"type type-{{pokemon.secondType.name}}\">\n                    {{ pokemon.secondType.name | uppercase }}\n                </span>\n              </span>\n            </div>\n            <div class=\"row panel-content\">\n              <span class=\"panel-content-text\">Base stats: {{ getBaseStatTotal(pokemon) }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </a>\n    </div>\n  </ng-container>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { MainService } from '../shared/services/main.service';\nimport { Observable } from 'rxjs';\nimport { PokemonSpecies } from './entities/pokemon-species';\n\n@Injectable()\nexport class PokemonSpeciesService extends MainService {\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super('pokemonSpecies/');\n  }\n\n  listPokemonSpecies(name: string): Observable<PokemonSpecies[]> {\n    const body = { params: new HttpParams().set('name', name)}\n    return this.http.get<PokemonSpecies[]>(this.url + \"getByName/\", body);\n  }\n\n  getPokemonSpecies(id: string): Observable<PokemonSpecies> {\n    const body = { params: new HttpParams().set('id', id)}\n    return this.http.get<PokemonSpecies>(this.url + \"getById/\", body);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MainService } from '../shared/services/main.service';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Pokemon } from './entities/pokemon';\n\n@Injectable()\nexport class PokemonService extends MainService {\n\n  constructor(\n    private http: HttpClient) {\n    super('pokemons/');\n  }\n\n  listPokemons(): Observable<Pokemon[]> {\n    return this.http.get<Pokemon[]>(`${this.url}getAll`, { headers: this.headers });\n  }\n\n  getPokemon(id: string): Observable<Pokemon> {\n    return this.http.get<Pokemon>(`${this.url}getByid/${id}`, { headers: this.headers });\n  }\n\n  savePokemon(pokemon: Pokemon): Observable<Pokemon> {\n    return this.http.post<Pokemon>(`${this.url}create`, pokemon, { headers: this.headers });\n  }\n\n  updatePokemon(pokemon: Pokemon, id: string): Observable<Pokemon> {\n    return this.http.put<Pokemon>(`${this.url}update/${id}`, pokemon, { headers: this.headers })\n  }\n\n  deletePokemon(id: number): Observable<Pokemon> {\n    return this.http.delete<Pokemon>(`${this.url}delete/${id}`, { headers: this.headers });\n  }\n\n}\n","export enum MoveCategory {\n    Physical = 1,\n    Special = 2,\n    Status = 3\n}\n","export enum Stat {\n    HP = 1,\n    Attack = 2,\n    Defense = 3,\n    SpecialAttack = 4,\n    SpecialDefense = 5,\n    Speed = 6\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { BasicDropdownEntity } from '../basic-dropdown/basic-dropdown-entity';\n\n@Component({\n  selector: 'app-advanced-dropdown',\n  templateUrl: './advanced-dropdown.component.html'\n})\nexport class AdvancedDropdownComponent {\n\n  list = new FormControl();\n\n  @Input()\n  items: string[];\n\n  @Input()\n  placeholder: string;\n\n  inputLabel: string;\n\n  @Input()\n  set selectedItem(selectedItem: BasicDropdownEntity) {\n    if (!!selectedItem) {\n      this.inputLabel = selectedItem.name;\n    }\n  }\n\n  @Output()\n  selected = new EventEmitter<any>();\n\n  checkbox: boolean = false\n\n  constructor() {\n    this.list.valueChanges.subscribe(text => {\n      this.setItem(text);\n    });\n  }\n\n  get shownItems() {\n    const text: string = this.list.value\n    if (!text) return this.items;\n    return this.items.filter(x => x.includes(text));\n  }\n\n  setItem(text: string) {\n    if (!!text) {\n      this.selected.emit(\n        this.items.find(x => text.toUpperCase().includes(x.toUpperCase()))\n        );\n    }\n  }\n}\n","export class BasicDropdownEntity {\n    id: number;\n    name: string\n\n    constructor (id: number, name: string) {\n      this.id = id;\n      this.name = name;\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-basic-dropdown',\n  templateUrl: './basic-dropdown.component.html',\n  styleUrls: ['./basic-dropdown.component.css']\n})\nexport class BasicDropdownComponent {\n\n  @Input()\n  items: any[]\n\n  @Input()\n  itemTitle: string;\n\n  @Input()\n  selectedItem: any = { id: 0 };\n\n  @Output()\n  itemSelected = new EventEmitter<string>();\n\n  setItem(id: string) {\n    this.selectedItem = id;\n    this.itemSelected.emit(id);\n  }\n}","<select class=\"form-control\" (change)=\"setItem($event.target.value)\">\n    <option value=\"0\">--Select one {{itemTitle}}--</option>\n    <option *ngFor=\"let item of items; let i = index\" value={{item.id}} [selected]=\"item.id == selectedItem\">\n        {{item.name}}\n    </option>\n</select>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n  showToggleItems: boolean;\n\n  constructor(private authService: AuthService) {\n    this.showToggleItems = false;\n  }\n\n  getCSSClass() {\n    if(this.showToggleItems) {\n      return \"navbar-collapse\";\n    }\n    return \"navbar-collapse collapse\";\n  }\n\n  toggleClicked() {\n    this.showToggleItems = !this.showToggleItems;\n  }\n\n  isLogged() {\n    return this.authService.isLogged();\n  }\n\n  logout() {\n    localStorage.clear()\n  }\n\n}\n","<div class=\"navbar navbar-inverse set-radius-zero\" >\n  <div class=\"container\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" (click)=\"toggleClicked()\">\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n      <h1 class=\"title title-main\">POKE SIMULATOR</h1>\n    </div>\n    <!-- <div class=\"right-div\">\n      <a href=\"#\" class=\"btn btn-danger pull-right\">LOG ME OUT</a>\n    </div> -->\n  </div>\n</div>\n<section class=\"menu-section\">\n  <div class=\"container\">\n    <div class=\"row \">\n      <div class=\"col-md-12\">\n        <div [class]=\"getCSSClass()\">\n          <ul id=\"menu-top\" class=\"nav navbar-nav navbar-right\">\n            <li><a href=\"/\" class=\"menu-top-active\">Home</a></li>\n            <li><a href=\"/search\">New Pokemon</a></li>\n            <li><a href=\"/simulation\">Simulate Battle</a></li>\n            <li *ngIf=\"!isLogged()\"><a href=\"/login\">Log in</a></li>\n            <li *ngIf=\"isLogged()\"><a routerLink=\"/login\" (click)=\"logout()\">Log out</a></li>\n            <!-- <li>\n              <a href=\"#\" class=\"dropdown-toggle\" id=\"ddlmenuItem\" data-toggle=\"dropdown\">UI ELEMENTS <i class=\"fa fa-angle-down\"></i></a>\n              <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"ddlmenuItem\">\n                <li role=\"presentation\"><a role=\"menuitem\" tabindex=\"-1\" href=\"ui.html\">UI ELEMENTS</a></li>\n                <li role=\"presentation\"><a role=\"menuitem\" tabindex=\"-1\" href=\"#\">EXAMPLE LINK</a></li>\n              </ul>\n            </li>\n            <li><a href=\"tab.html\">TABS & PANELS</a></li>\n            <li><a href=\"table.html\">TABLES</a></li>\n            <li><a href=\"blank.html\">BLANK PAGE</a></li> -->\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { MoveCategory } from '../enums/move-category.enum';\n\n@Pipe({\n  name: 'MoveCategory'\n})\nexport class MoveCategoryPipe implements PipeTransform {\n\n  transform(moveCategory: MoveCategory): any {\n    switch(moveCategory) {\n      case MoveCategory.Physical: {\n        return 'Physical'\n      }\n      case MoveCategory.Special: {\n        return 'Special'\n      }\n      case MoveCategory.Status: {\n        return 'Status'\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Stat } from '../enums/stat.enum';\n\n@Pipe({\n  name: 'Stat'\n})\nexport class StatPipe implements PipeTransform {\n\n  transform(stat: Stat): any {\n    switch(stat) {\n      case Stat.Attack: {\n        return 'Attack'\n      }\n      case Stat.Defense: {\n        return 'Defense'\n      }\n      case Stat.SpecialAttack: {\n        return 'Special Attack'\n      }\n      case Stat.SpecialDefense: {\n        return 'Special Defense'\n      }\n      case Stat.Speed: {\n        return 'Speed'\n      }\n      case Stat.HP: {\n        return 'HP'\n      }\n      default: {\n        return 'None'\n      }\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { MainService } from './main.service';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Auth } from '../../user/entities/auth';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '../../user/entities/user';\n\n@Injectable()\nexport class AuthService extends MainService {\n\n  constructor(private http: HttpClient) {\n    super('Auth/');\n  }\n\n  login(user: User): Observable<any> {\n    return this.http.post<any>(`${this.url}login`, user);\n  }\n\n  signUp(user: User): Observable<any> {\n    return this.http.post<any>(`${this.url}register`, user);\n  }\n\n  setToken(token: string): void {\n    localStorage.setItem(this.TOKEN, token);\n  }\n\n  isLogged() {\n    return localStorage.getItem(this.TOKEN) != null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpHeaders } from '@angular/common/http';\n\nexport abstract class MainService {\n\n  protected TOKEN = 'TOKEN';\n  protected headers: HttpHeaders\n\n  protected url: string\n  constructor(object: string) {\n      this.url = environment.baseUrl + object;\n      var token = localStorage.getItem(this.TOKEN)\n      if (!!token)\n      {\n        this.headers = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem(this.TOKEN)\n        })\n      }\n      else \n      {\n        this.headers = new HttpHeaders({\n          'Content-Type': 'application/json',\n        })\n      }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { PokemonService } from '../../pokemon/pokemon.service';\nimport { Pokemon } from '../../pokemon/entities/pokemon';\nimport { BasicDropdownEntity } from '../../shared/layouts/basic-dropdown/basic-dropdown-entity';\nimport { MoveCategoryPipe } from '../../shared/pipes/move-category.pipe';\nimport { SimulationPokemon } from '../simulation-pokemon';\nimport { FormGroup } from '../../../../node_modules/@angular/forms';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { PokemonDomain } from '../../pokemon/pokemon-domain';\n\n@Component({\n  selector: 'app-simulation-card',\n  templateUrl: './simulation-card.component.html',\n  styleUrls: ['./simulation-card.component.css']\n})\nexport class SimulationCardComponent implements OnInit {\n\n  pokemonsDropdown: BasicDropdownEntity[] = [];\n  movesDropdown: BasicDropdownEntity[];\n  pokemons: Pokemon[];\n  simulationPokemon: SimulationPokemon;\n\n  POKEMON_DROPDOWN_TITLE = 'Pokemon';\n  moveDROPDOWN_TITLE = 'Move'\n\n  @Input()\n  simulationForm: FormGroup;\n\n  @Input()\n  title: string\n\n  @Input()\n  isAttacking: boolean = false;\n\n  @Output()\n  changed = new EventEmitter<SimulationPokemon>();\n\n  @Input()\n  selectedPokemon: number;\n\n  constructor(\n    private authService: AuthService,\n    private pokemonService: PokemonService) {\n   }\n\n  ngOnInit() {\n    this.listPokemons();\n  }\n\n  listPokemons() {\n    this.pokemonService.listPokemons().subscribe( resp => {\n      this.pokemons = resp;\n      resp.forEach(pokemon => {\n        const pokemonName = `${pokemon.pokemonSpecies.name.toUpperCase()} - level ${pokemon.level}`\n        this.pokemonsDropdown.push(new BasicDropdownEntity(pokemon.id, pokemonName));\n      });\n      if (!!this.selectedPokemon) {\n        this.setPokemon(this.selectedPokemon.toString());\n      }\n    })\n  }\n\n  setPokemon(id: string) {\n    this.clearForm();\n    if (this.authService.isLogged())\n    {\n      this.pokemonService.getPokemon(id).subscribe(resp => {\n        this.simulationPokemon = new SimulationPokemon(resp);\n        if (this.isAttacking) {\n          this.simulationForm.get('attacking_pokemon_id').setValue(resp.id);\n          this.movesDropdown = []\n          if(!!resp.move1) {\n            let move1_text = `${resp.move1.name} - Power: ${resp.move1.basePower} - ${resp.move1.category}`\n            this.movesDropdown.push(new BasicDropdownEntity(1, move1_text));\n          }\n          if (!!resp.move2) {\n            let move2_text = `${resp.move2.name} - Power: ${resp.move2.basePower} - ${resp.move2.category}`\n            this.movesDropdown.push(new BasicDropdownEntity(2, move2_text));\n          }\n          if (!!resp.move3) {\n            let move3_text = `${resp.move3.name} - Power: ${resp.move3.basePower} - ${resp.move3.category}`\n            this.movesDropdown.push(new BasicDropdownEntity(3, move3_text));\n          }\n          if (!!resp.move4) {\n            let move4_text = `${resp.move4.name} - Power: ${resp.move4.basePower} - ${resp.move4.category}`\n            this.movesDropdown.push(new BasicDropdownEntity(4, move4_text));\n          }\n        } else {\n          this.simulationForm.get('defending_pokemon_id').setValue(resp.id);\n        }\n        this.changed.emit(this.simulationPokemon);\n      });\n    }\n    else {\n      this.setPokemonCache(+id);\n    }\n  }\n  clearForm() {\n    this.movesDropdown = []\n    this.simulationForm.get('moveid').setValue(0);\n    this.changed.emit(null);\n    \n  }\n\n  setPokemonCache(id: number) {\n    let selectedPokemon = this.pokemons.find(x => x.id == id);\n    this.simulationPokemon = new SimulationPokemon(selectedPokemon);\n    if (this.isAttacking) {\n      this.simulationForm.get('attacking_pokemon_id').setValue(selectedPokemon.id);\n      if(!!selectedPokemon.move1) {\n        let move1_text = `${selectedPokemon.move1.name} - Power: ${selectedPokemon.move1.basePower} - ${selectedPokemon.move1.category}`\n        this.movesDropdown.push(new BasicDropdownEntity(1, move1_text));\n      }\n      if (!!selectedPokemon.move2) {\n        let move2_text = `${selectedPokemon.move2.name} - Power: ${selectedPokemon.move2.basePower} - ${selectedPokemon.move2.category}`\n        this.movesDropdown.push(new BasicDropdownEntity(2, move2_text));\n      }\n      if (!!selectedPokemon.move3) {\n        let move3_text = `${selectedPokemon.move3.name} - Power: ${selectedPokemon.move3.basePower} - ${selectedPokemon.move3.category}`\n        this.movesDropdown.push(new BasicDropdownEntity(3, move3_text));\n      }\n      if (!!selectedPokemon.move4) {\n        let move4_text = `${selectedPokemon.move4.name} - Power: ${selectedPokemon.move4.basePower} - ${selectedPokemon.move4.category}`\n        this.movesDropdown.push(new BasicDropdownEntity(4, move4_text));\n      }\n    } else {\n      this.simulationForm.get('defending_pokemon_id').setValue(selectedPokemon.id);\n    }\n    this.changed.emit(this.simulationPokemon);\n  }\n\n  setMove(id: string) {\n    let move\n    switch(id) {\n      case '1': {\n        move = this.simulationPokemon.pokemon.move1\n        break;\n      }\n      case '2': {\n        move = this.simulationPokemon.pokemon.move2\n        break;\n      }\n      case '3': {\n        move = this.simulationPokemon.pokemon.move3\n        break;\n      }\n      case '4': {\n        move = this.simulationPokemon.pokemon.move4\n        break;\n      }\n      default: {\n        move = null;\n      }\n    }\n    this.simulationForm.get('moveid').setValue(!!move ? move.id : 0);\n    this.simulationPokemon.move = move\n    this.changed.emit(this.simulationPokemon);\n  }\n\n  validatePokemon(): boolean {\n    if (this.isAttacking) {\n      return this.simulationForm.get('attacking_pokemon_id').valid || !this.simulationForm.get('attacking_pokemon_id').dirty;\n    }\n    return this.simulationForm.get('defending_pokemon_id').valid || !this.simulationForm.get('defending_pokemon_id').dirty;\n  }\n\n  validateMove(): boolean {\n    return this.simulationForm.get('moveid').valid || !this.simulationForm.get('moveid').dirty;\n  }\n\n  getImgUrl() {\n    if(!this.simulationPokemon) {\n      return null;\n    }\n    return PokemonDomain.getImgUrl(this.simulationPokemon.pokemon.pokemonSpecies);\n  }\n\n  isLogged() {\n    return this.authService.isLogged();\n  }\n\n}\n","<form [formGroup]=\"simulationForm\">\n<div class=\"panel panel-default\">\n    <div class=\"panel-heading\">\n      <b>{{title}}</b>\n    </div>\n    <div class=\"panel-body\">\n   <!--    <ul class=\"nav nav-pills\">\n        <li class=\"active\"><a href=\"#attacking-my-pokemon\" data-toggle=\"tab\">My Pokemon</a>\n        </li>\n        <li class=\"\"><a href=\"#attacking-new-pokemon\" data-toggle=\"tab\">New Pokemon</a>\n        </li>\n        <li class=\"\"><a href=\"#attacking-advanced\" data-toggle=\"tab\">Advanced</a>\n        </li>\n      </ul> -->\n\n      <div class=\"tab-content\">\n        <div class=\"tab-pane fade active in\" id=\"attacking-my-pokemon\">\n          <h4>Select your pokemon</h4>\n          <app-basic-dropdown [items]=\"pokemonsDropdown\" [itemTitle]=\"POKEMON_DROPDOWN_TITLE\" (itemSelected)=\"setPokemon($event)\"></app-basic-dropdown>\n          <p class=\"error-message\" *ngIf=\"!validatePokemon()\">A pokemon must be selected</p>\n          <div class=\"left-div\" *ngIf=\"getImgUrl()\">\n            <div class=\"image-div image-div-small\">\n              <img id=\"attacking_pokemon_img\" class=\"pokemon-img\" [src]=\"getImgUrl()\">\n            </div>\n            <label class=\"title title-casual\">{{ simulationPokemon.pokemon.pokemonSpecies.name.toUpperCase() }}</label>\n            <p>HP: {{ simulationPokemon.pokemon.hp }}</p>\n            <p>Attack: {{ simulationPokemon.pokemon.attack }}</p>\n            <p>Defense: {{ simulationPokemon.pokemon.defense }}</p>\n            <p>Special Attack: {{ simulationPokemon.pokemon.spAttack }}</p>\n            <p>Special Defense: {{ simulationPokemon.pokemon.spDefense }}</p>\n            <p>Speed: {{ simulationPokemon.pokemon.speed }}</p>\n            <div *ngIf=\"isAttacking\">\n              <app-basic-dropdown [items]=\"movesDropdown\" [itemTitle]=\"moveDROPDOWN_TITLE\" (itemSelected)=\"setMove($event)\"></app-basic-dropdown>\n              <p class=\"error-message\" *ngIf=\"!validateMove()\">A move must be selected</p>\n              <label>Modifier</label><br>\n              <input formControlName=\"modifier\" type=\"number\" class=\"form-control\"/>\n            </div>\n          </div>\n        <!-- <div class=\"tab-pane fade\" id=\"attacking-new-pokemon\">\n          <h4>Profile Tab</h4>\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n        </div>\n        <div class=\"tab-pane fade\" id=\"attacking-advanced\">\n          <h4>Messages Tab</h4>\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n        </div> -->\n      </div>\n    </div>\n  </div>\n</div>\n</form>\n","import { Pokemon } from \"../pokemon/entities/pokemon\";\nimport { Move } from \"../moves/move\";\n\nexport class SimulationPokemon {\n    pokemon: Pokemon;\n    move: Move;\n\n    constructor(pokemon: Pokemon) {\n        this.pokemon = pokemon;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { MainService } from '../shared/services/main.service';\nimport { Observable } from 'rxjs';\nimport { SimulationDto } from './simulation-dto';\n\n@Injectable()\nexport class SimulationService extends MainService {\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super('simulation');\n  }\n\n  getDamage(simulationDto: SimulationDto): Observable<number> {\n    const params = new HttpParams()\n      .set('attackingPokemonId', simulationDto.attacking_pokemon_id.toString())\n      .set('defendingPokemonId', simulationDto.defending_pokemon_id.toString())\n      .set('moveId', simulationDto.moveid.toString())\n      .set('modifier', simulationDto.modifier.toString());\n    return this.http.get<number>(`${this.url}/getDamage`, { headers: this.headers, params: params});\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SimulationPokemon } from '../simulation-pokemon';\nimport { SimulationService } from '../simulation.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '../../../../node_modules/@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-simulation',\n  templateUrl: './simulation.component.html',\n  styleUrls: ['./simulation.component.css']\n})\nexport class SimulationComponent implements OnInit {\n\n  attackingPokemon: SimulationPokemon;\n  paramId: number;\n  defendingPokemon: SimulationPokemon;\n  ATTACKING_POKEMON: string = \"Attacking Pokemon\";\n  DEFENDING_POKEMON: string = \"Defending Pokemon\";\n  battleResultsTitle: string;\n  battleResults: string;\n  damage: number;\n  simulationForm: FormGroup;\n\n  constructor(\n    private simulationService: SimulationService,\n    private route: ActivatedRoute,\n    private toastr: ToastrService,\n    private authService: AuthService,\n    fb: FormBuilder\n    ) {\n      this.route.params.subscribe( params => {\n        this.paramId = params.id;\n      });\n      this.simulationForm = fb.group({\n        attacking_pokemon_id: [null, Validators.required],\n        defending_pokemon_id: [null, Validators.required],\n        moveid: [null, Validators.required],\n        modifier: [1]\n      })\n  }\n\n  ngOnInit(): void {\n    // if (!this.isLogged()) {\n    //   this.toastr.warning(\n    //     'You have to log in to simulate a battle',\n    //     'Warning',\n    //     { disableTimeOut : true}\n    //   );\n    // }\n  }\n\n  isLogged() {\n    return this.authService.isLogged();\n  }\n\n  updateAttackingPokemon(attackingPokemon: SimulationPokemon) {\n    this.attackingPokemon = attackingPokemon;\n  }\n\n  updateDefendingPokemon(defendingPokemon: SimulationPokemon) {\n    this.defendingPokemon = defendingPokemon;\n  }\n\n  simulateBattle() {\n    let simulationDto = this.simulationForm.getRawValue();\n    this.simulationService.getDamage(simulationDto).subscribe( resp => {\n      const damage = resp\n      const attacker_name = this.attackingPokemon.pokemon.pokemonSpecies.name\n      const defender_name = this.defendingPokemon.pokemon.pokemonSpecies.name\n      const movename = this.attackingPokemon.move.name\n      const defenderHp = this.defendingPokemon.pokemon.hp\n      this.battleResultsTitle = `Pokemon ${attacker_name.toUpperCase()} attacked ${defender_name.toUpperCase()} with ${movename}.`\n      this.battleResults = `${movename} took ${damage} of damage.\\n\n      ${defender_name.toUpperCase()} HP dropped from ${defenderHp} to ${defenderHp - damage}.\\n ${((damage/defenderHp) * 100).toFixed(0)}% of its total HP`\n    });\n  }\n\n  getCSSClass() {\n    if (window.innerWidth <= 760) { // 768px portrait\n      return '';\n    }\n    return 'flex-row flex-row-align-strech';\n  }\n\n}\n","<form [formGroup]=\"simulationForm\" (ngSubmit)=\"simulateBattle()\">\n<div [class]=\"getCSSClass()\">\n  <div class=\"col-lg-5 col-md-12 col-sm-12 flex-row flex-row-align-strech flex-row-justify-center\">\n    <app-simulation-card style=\"width: 100%;\" [simulationForm]=\"simulationForm\" [isAttacking]=\"true\" [title]=\"ATTACKING_POKEMON\" [selectedPokemon]=\"paramId\" (changed)=\"updateAttackingPokemon($event)\"></app-simulation-card>\n  </div>\n\n\n  <div class=\"col-md-2 flex-row flex-row-align-center flex-row-justify-center\">\n    <button style=\"margin: 15px;\" [disabled]=\"!simulationForm.valid\" class=\"btn btn-danger\" id=\"simulate_battle\">\n      Simulate Battle\n    </button>\n  </div>\n\n  <div class=\"col-lg-5 col-md-12 col-sm-12 flex-row flex-row-align-strech flex-row-justify-center\">\n    <app-simulation-card style=\"width: 100%;\" [simulationForm]=\"simulationForm\" [title]=\"DEFENDING_POKEMON\" (changed)=\"updateDefendingPokemon($event)\"></app-simulation-card>\n  </div>\n</div>\n<div *ngIf=\"!!battleResults\" class=\"flex-row flex-row-align-strech\">\n    <div class=\"col-md-12 col-sm-12 flex-row flex-row-align-strech flex-row-justify-center\">\n      <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">\n          <b>{{ battleResultsTitle }}</b>\n        </div>\n      <div class=\"panel-body\">\n        <label>{{ battleResults }}</label>\n      </div>\n    </div>\n  </div>\n</div>\n</form>\n","export class User {\n\n  password: string;\n  username: string;\n\n  constructor(username: string, password: string) {\n    this.username =  username;\n    this.password = password\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Auth } from '../entities/auth';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from '../entities/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService,\n    fb: FormBuilder) {\n    this.loginForm = fb.group({\n      username: [null, Validators.required],\n      password: [null, Validators.required]\n    });\n   }\n\n  ngOnInit(): void {\n    if (this.authService.isLogged()) {\n      this.router.navigateByUrl('/');\n    }\n  }\n\n  login() {\n    let user = new User(\n      this.loginForm.get('username').value,\n      this.loginForm.get('password').value\n      )\n    this.authService.login(user).subscribe(\n      res => {\n        this.authService.setToken(res.accessToken);\n        this.router.navigateByUrl('/');\n      }, err => {\n        this.toastr.error(err.error.message)\n      })\n  }\n\n\n\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n  <div class=\"flex-column flex-column-align-center\">\n    <div class=\"col-md-6\" >\n      <h1>Log in</h1>\n      <div class=\"col-md-12\">\n        <div class=\"field\">\n          <label>Username</label>\n          <input formControlName=\"username\" class=\"form-control\">\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"field\">\n          <label>Password</label>\n          <input formControlName=\"password\" class=\"form-control\" type=\"password\">\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"actions right-div\">\n          <button type=\"submit\" class=\"btn btn-primary\">Log in</button>\n          <a class=\"btn btn-success\" href=\"/sign_up\">Sign Up</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Auth } from '../entities/auth';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from '../entities/user';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n})\nexport class SignUpComponent {\n\n  signUpForm: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService,\n    fb: FormBuilder) {\n      this.signUpForm = fb.group({\n        username: [null, Validators.required],\n        password: [null, Validators.required],\n        confirmPassword: [null, Validators.required],\n      })\n    }\n\n  signUp() {\n    let user = new User(\n      this.signUpForm.get('username').value,\n      this.signUpForm.get('password').value\n      )\n    this.authService.signUp(user).subscribe(\n      (response) => {\n        this.login(user);\n      }, \n      (error) => {\n        this.toastr.error(error.error.message)\n      }\n    );\n  }\n\n  login(user: User) {\n    this.authService.login(user).subscribe(\n      res => {\n        this.authService.setToken(res.jwt);\n        this.router.navigateByUrl('/');\n      })\n  }\n\n  validatePassword() {\n    return this.signUpForm.get('password').value === this.signUpForm.get('confirmPassword').value\n      || !this.signUpForm.get('password').dirty\n      || !this.signUpForm.get('confirmPassword').dirty\n  }\n\n  validateForm() {\n    return this.signUpForm.valid && this.validatePassword();\n  }\n\n}\n","<form [formGroup]=\"signUpForm\" (ngSubmit)=\"signUp()\">\n    <div class=\"flex-column flex-column-align-center\">\n      <div class=\"col-md-6\" >\n        <h1>Sign Up</h1>\n        <div class=\"col-md-12\">\n            <div class=\"field\">\n              <label>Username</label>\n              <input formControlName=\"username\" class=\"form-control\">\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n          <div class=\"field\">\n            <label>Password</label>\n            <input formControlName=\"password\" class=\"form-control\" type=\"password\">\n          </div>\n        </div>\n        <div class=\"col-md-12\">\n          <div class=\"field\">\n            <label>Confirm Password</label>\n            <input formControlName=\"confirmPassword\" class=\"form-control\" type=\"password\">\n          </div>\n        </div>\n        <p class=\"error-message\" *ngIf=\"!validatePassword()\">Password and Confirm Password are not matching</p>\n        <div class=\"col-md-12\">\n          <div class=\"actions right-div\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!validateForm()\">Sign Up</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  baseUrl: \"https://localhost:5001/api/\",\n  // baseUrl: \"http://localhost:5000/api/\",\n  // baseUrl: \"http://localhost:43489/api/\",\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}