{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/moves/move-domain.ts","webpack:///src/app/moves/move-dropdown/move-dropdown.component.ts","webpack:///src/app/shared/layouts/advanced-dropdown/advanced-dropdown.component.html","webpack:///src/app/moves/move.service.ts","webpack:///src/app/nature/nature-domain.ts","webpack:///src/app/nature/nature-dropdown/nature-dropdown.component.ts","webpack:///src/app/nature/nature.service.ts","webpack:///src/app/pokemon/entities/pokemon.ts","webpack:///src/app/pokemon/pokemon-domain.ts","webpack:///src/app/pokemon/pokemon-register/pokemon-register.component.ts","webpack:///src/app/pokemon/pokemon-register/pokemon-register.component.html","webpack:///src/app/pokemon/pokemon-search/pokemon-search.component.ts","webpack:///src/app/pokemon/pokemon-search/pokemon-search.component.html","webpack:///src/app/pokemon/pokemon-species.service.ts","webpack:///src/app/pokemon/pokemon.service.ts","webpack:///src/app/shared/enums/move-category.enum.ts","webpack:///src/app/shared/enums/stat.enum.ts","webpack:///src/app/shared/layouts/advanced-dropdown/advanced-dropdown.component.ts","webpack:///src/app/shared/layouts/basic-dropdown/basic-dropdown-entity.ts","webpack:///src/app/shared/layouts/basic-dropdown/basic-dropdown.component.ts","webpack:///src/app/shared/layouts/basic-dropdown/basic-dropdown.component.html","webpack:///src/app/shared/layouts/header/header.component.ts","webpack:///src/app/shared/layouts/header/header.component.html","webpack:///src/app/shared/pipes/move-category.pipe.ts","webpack:///src/app/shared/pipes/stat.pipe.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/main.service.ts","webpack:///src/app/shared/token-interceptor.ts","webpack:///src/app/simulation/simulation-card/simulation-card.component.ts","webpack:///src/app/simulation/simulation-card/simulation-card.component.html","webpack:///src/app/simulation/simulation-pokemon.ts","webpack:///src/app/simulation/simulation.service.ts","webpack:///src/app/simulation/simulation/simulation.component.ts","webpack:///src/app/simulation/simulation/simulation.component.html","webpack:///src/app/user/entities/user.ts","webpack:///src/app/user/login/login.component.ts","webpack:///src/app/user/login/login.component.html","webpack:///src/app/user/sign-up/sign-up.component.ts","webpack:///src/app/user/sign-up/sign-up.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","HomeComponent","pokemonService","authService","toastr","router","myControl","tests","valueChanges","subscribe","newValue","testMethod","listPokemons","resp","pokemons","pokemon_id","deletePokemon","success","navigate","window","innerWidth","isLogged","pokemonSpecies","getImgUrl","length","MoveDomain","move","name","basePower","category","MoveDropdownComponent","list","text","setItem","selected","emit","moves","find","x","toUpperCase","includes","value","map","filter","MoveService","http","get","url","providedIn","NatureDomain","nature","strongStat","weakStat","prototype","transform","NatureDropdownComponent","natures","NatureService","Pokemon","PokemonDomain","PokemonRegisterComponent","route","pokemonSpeciesService","natureService","moveService","fb","pokemon","totalEvLeft","params","speciesIdParam","species_id","pokemonIdParam","pokemonForm","group","level","compose","required","min","max","ivHp","ivAttack","ivDefense","ivSpAttack","ivSpDefense","ivSpeed","evHp","evAttack","evDefense","evSpAttack","evSpDefense","evSpeed","move1","move2","move3","move4","initializeObjects","values","refreshStats","warning","disableTimeOut","getPokemon","pokemon_species","patchValue","getPokemonSpecies","listMoves","forEach","setMoveName","listNatures","defineNatureText","newPokemon","Object","assign","savePokemon","err","console","log","error","message","updatePokemon","valid","ev_total","setValue","hp","Math","round","calculateHP","attack","calculateStat","Attack","baseAttack","defense","Defense","baseDefense","spAttack","SpecialAttack","baseSpAttack","spDefense","SpecialDefense","baseSpDefense","speed","Speed","baseSpeed","iv","ev","baseHp","statString","stat","baseStat","calculateNature","natureId","natureSelected","setNature","SetIvsToMax","setMove1","setMove2","setMove3","setMove4","PokemonSearchComponent","pokemonSpeciesServie","pokemonSearchForm","listPokemonSpecies","searchPokemons","PokemonSpeciesService","body","set","PokemonService","post","put","delete","MoveCategory","Stat","AdvancedDropdownComponent","checkbox","items","selectedItem","inputLabel","BasicDropdownEntity","BasicDropdownComponent","clear","itemSelected","HeaderComponent","showToggleItems","navigateByUrl","toggleClicked","MoveCategoryPipe","moveCategory","Physical","Special","Status","StatPipe","HP","AuthService","user","token","localStorage","TOKEN","getItem","removeItem","MainService","object","baseUrl","TokenInterceptor","request","next","clone","setHeaders","handle","SimulationCardComponent","pokemonsDropdown","POKEMON_DROPDOWN_TITLE","moveDROPDOWN_TITLE","isAttacking","changed","clearMoveDrop","pokemonName","push","selectedPokemon","setPokemon","toString","clearForm","simulationPokemon","simulationForm","movesDropdown","move1_text","move2_text","move3_text","move4_text","setPokemonCache","dirty","SimulationPokemon","SimulationService","simulationDto","attacking_pokemon_id","defending_pokemon_id","moveid","modifier","headers","SimulationComponent","simulationService","ATTACKING_POKEMON","DEFENDING_POKEMON","paramId","attackingPokemon","defendingPokemon","getRawValue","getDamage","damage","attacker_name","defender_name","movename","defenderHp","battleResultsTitle","battleResults","toFixed","effect","simulateBattle","updateAttackingPokemon","updateDefendingPokemon","User","username","password","LoginComponent","isLoading","loginForm","login","res","setToken","accessToken","SignUpComponent","signUpForm","confirmPassword","signUp","response","validatePassword","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\nimport { PokemonSearchComponent } from './pokemon/pokemon-search/pokemon-search.component';\nimport { PokemonRegisterComponent } from './pokemon/pokemon-register/pokemon-register.component';\nimport { SimulationComponent } from './simulation/simulation/simulation.component';\n\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', component: HomeComponent},\n  { path: 'login', pathMatch: 'full', component: LoginComponent },\n  { path: 'sign_up', pathMatch: 'full', component: SignUpComponent },\n  { path: 'search', component: PokemonSearchComponent },\n  { path: 'pokemon', component: PokemonRegisterComponent},\n  { path: 'pokemon/:species_id', component: PokemonRegisterComponent },\n  { path: 'pokemon/:pokemon_id/:isEdit', component: PokemonRegisterComponent },\n  { path: 'simulation', component: SimulationComponent },\n  { path: 'simulation/:id', component: SimulationComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'pokeSimulatorFront';\n}\n","<app-header></app-header>\n<div class=\"content-wrapper\">\n    <div class=\"container\">        \n        <router-outlet></router-outlet>\n    </div>\n</div>\n","import { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './shared/layouts/header/header.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PokemonSearchComponent } from './pokemon/pokemon-search/pokemon-search.component';\nimport { PokemonSpeciesService } from './pokemon/pokemon-species.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { PokemonRegisterComponent } from './pokemon/pokemon-register/pokemon-register.component';\nimport { BasicDropdownComponent } from './shared/layouts/basic-dropdown/basic-dropdown.component';\nimport { NatureService } from './nature/nature.service';\nimport { StatPipe } from './shared/pipes/stat.pipe';\nimport { MoveCategoryPipe } from './shared/pipes/move-category.pipe';\nimport { PokemonService } from './pokemon/pokemon.service';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SimulationComponent } from './simulation/simulation/simulation.component';\nimport { SimulationCardComponent } from './simulation/simulation-card/simulation-card.component';\nimport { SimulationService } from './simulation/simulation.service';\nimport { LoginComponent } from './user/login/login.component';\nimport { AuthService } from './shared/services/auth.service';\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\nimport { NatureDropdownComponent } from './nature/nature-dropdown/nature-dropdown.component';\nimport { AdvancedDropdownComponent } from './shared/layouts/advanced-dropdown/advanced-dropdown.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MoveDropdownComponent } from './moves/move-dropdown/move-dropdown.component';\nimport { TokenInterceptor } from './shared/token-interceptor';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    PokemonSearchComponent,\n    PokemonRegisterComponent,\n    BasicDropdownComponent,\n    StatPipe,\n    MoveCategoryPipe,\n    SimulationComponent,\n    SimulationCardComponent,\n    LoginComponent,\n    SignUpComponent,\n    AdvancedDropdownComponent,\n    NatureDropdownComponent,\n    MoveDropdownComponent,\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    AppRoutingModule,\n    ToastrModule.forRoot(),\n  ],\n  providers: [\n    PokemonSpeciesService,\n    PokemonService,\n    NatureService,\n    SimulationService,\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { PokemonService } from '../pokemon/pokemon.service';\nimport { Pokemon } from '../pokemon/entities/pokemon';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../shared/services/auth.service';\nimport { FormControl } from '@angular/forms';\nimport { PokemonDomain } from '../pokemon/pokemon-domain';\nimport { PokemonSpecies } from '../pokemon/entities/pokemon-species';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  pokemons: Pokemon[];\n\n  myControl = new FormControl();\n  tests: string[] = ['One', 'Two', 'Three'];\n\n  constructor(\n    private pokemonService: PokemonService,\n    private authService: AuthService,\n    private toastr: ToastrService,\n    private router: Router\n    ) {\n      this.myControl.valueChanges.subscribe(newValue=>{\n        this.tests = this.testMethod();\n    })\n    }\n\n  ngOnInit() {\n    // if (this.isLogged()) {\n      this.listPokemons();\n    // }\n  }\n\n  get isListPokemonsEmpty(): boolean {\n    return !this.pokemons || this.pokemons.length == 0;\n  }\n\n  testMethod() {\n    return [\"one\", \"two\", \"three\"];\n  }\n\n  listPokemons() {\n    this.pokemonService.listPokemons().subscribe(resp => {\n      this.pokemons = resp;\n    });\n  }\n\n  deletePokemon(pokemon_id: number) {\n    this.pokemonService.deletePokemon(pokemon_id).subscribe(resp => {\n      this.listPokemons();\n      this.toastr.success('Pokemon was deleted succesfully');\n    })\n  }\n\n  editPokemon(pokemon_id: number) {\n    this.router.navigate([`/pokemon`, pokemon_id, \"isEdit\"]);\n  }\n\n  simulateBattle(id: number) {\n    this.router.navigate([`/simulation`, id]);\n  }\n\n  getCSSClass() {\n    if (window.innerWidth <= 760) {\n      return 'collapse';\n    }\n    return '';\n  }\n\n  isLogged() {\n    return this.authService.isLogged();\n  }\n\n  getImgUrl(pokemonSpecies: PokemonSpecies) {\n    return PokemonDomain.getImgUrl(pokemonSpecies);\n  }\n\n}\n","<!-- <div *ngIf=\"isLogged()\"> -->\n  <div *ngIf=\"isListPokemonsEmpty\">\n    <p>No Pokemons registered yet. Click <a href=\"/search\">here</a> to save your pokemons</p>\n  </div>\n\n  <div *ngIf=\"!isListPokemonsEmpty\">\n    <h1>Pokemons</h1>\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Pokemon species</th>\n          <th>Level</th>\n          <th [class]=\"getCSSClass()\">Attack</th>\n          <th [class]=\"getCSSClass()\">Defense</th>\n          <th [class]=\"getCSSClass()\">Special Attack</th>\n          <th [class]=\"getCSSClass()\">Special Defense</th>\n          <th [class]=\"getCSSClass()\">Speed</th>\n          <th [class]=\"getCSSClass()\">HP</th>\n          <th colspan=\"3\">Actions</th>\n        </tr>\n      </thead>\n      \n      <tbody>\n        <ng-container *ngFor=\"let pokemon of pokemons\">\n          <tr class=\"u-align-v-center\">\n            <td>\n              <img class=\"pokemon-img-small\" [src]=\"getImgUrl(pokemon.pokemonSpecies)\">\n              {{ pokemon.pokemonSpecies.name.toUpperCase() }}\n            </td>\n            <td>{{ pokemon.level }}</td>\n            <td [class]=\"getCSSClass()\">{{ pokemon.attack }}</td>\n            <td [class]=\"getCSSClass()\">{{ pokemon.defense }}</td>\n            <td [class]=\"getCSSClass()\">{{ pokemon.spAttack }}</td>\n            <td [class]=\"getCSSClass()\">{{ pokemon.spDefense }}</td>\n            <td [class]=\"getCSSClass()\">{{ pokemon.speed }}</td>\n            <td [class]=\"getCSSClass()\">{{ pokemon.hp }}</td>\n            <td><a class=\"table-button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Simulate Battle!\" (click)=\"simulateBattle(pokemon.id)\">\n              <span class=\"glyphicon glyphicon-flash\" aria-hidden=\"true\"></span>\n            </a></td>\n            <td *ngIf=\"isLogged()\"><a class=\"table-button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit Pokemon\" (click)=\"editPokemon(pokemon.id)\">\n              <span class=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\n            </a></td>\n            <td *ngIf=\"isLogged()\"><a class=\"table-button\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete Pokemon\" (click)=\"deletePokemon(pokemon.id)\">\n              <span class=\"glyphicon glyphicon-trash\" aria-hidden=\"true\"></span>\n            </a></td>\n          </tr>\n        </ng-container>\n      </tbody>\n    </table>\n  </div>\n<!-- </div> -->\n<!-- <div *ngIf=\"!isLogged()\">\n  <p>You are not logged in. Click <a href=\"/login\">here to <b>log in</b></a> and list your Pokemons or <a href=\"/sign_up\">here to <b>sign up</b></a></p>\n</div> -->\n","import { Move } from './move';\n\nexport class MoveDomain {\n\n  static setMoveName(move: Move) {\n    return `${move.name} - Power: ${move.basePower} - ${move.category}`\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AdvancedDropdownComponent } from '../../shared/layouts/advanced-dropdown/advanced-dropdown.component';\nimport { Move } from '../move';\n\n@Component({\n  selector: 'app-move-dropdown',\n  templateUrl: '../../shared/layouts/advanced-dropdown/advanced-dropdown.component.html'\n})\nexport class MoveDropdownComponent extends AdvancedDropdownComponent {\n\n  @Input()\n  moves: Move[];\n\n  constructor() {\n    super();\n    this.list.valueChanges.subscribe(text => {\n      this.setItem(text);\n    });\n  }\n\n  get shownItems() {\n    const text: string = this.list.value\n    if (!this.moves) return null\n    if (!text) return this.moves.map(x => x.name);\n    return this.moves.filter(x =>\n      x.name\n      .toUpperCase()\n      .includes(text.toUpperCase()))\n      .map(x => x.name);\n  }\n\n  setItem(text: string) {\n    if (!!text) {\n      this.selected.emit(\n        this.moves.find(x => x.name.toUpperCase().includes(text.toUpperCase()))\n        );\n    }\n  }\n}\n","  <mat-form-field style=\"width: 100%;\">\n    <input type=\"text\" matInput [(ngModel)]=\"inputLabel\" [placeholder]=\"placeholder\" [formControl]=\"list\" [matAutocomplete]=\"auto\"/>\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let item of shownItems\" [value]=\"item\">{{ item }}</mat-option>\n      </mat-autocomplete>\n  </mat-form-field>\n\n\n","import { Injectable } from '@angular/core';\nimport { MainService } from '../shared/services/main.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Move } from './move';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoveService extends MainService {\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super('moves/');\n  }\n\n  listMoves(): Observable<Move[]> {\n    return this.http.get<Move[]>(`${this.url}getAll/`)\n  }\n\n}\n","import { Nature } from './nature';\nimport { StatPipe } from '../shared/pipes/stat.pipe';\n\nexport class NatureDomain {\n\n  static defineNatureText(nature: Nature) {\n    if (!nature) return null;\n    if (!nature.strongStat && !nature.weakStat) {\n      return `${nature.name}: Neutral`;\n    }\n    return `${nature.name} - Strong: ${StatPipe.prototype.transform(nature.strongStat)} - Weak: ${StatPipe.prototype.transform(nature.weakStat)}`;\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Nature } from '../nature';\nimport { AdvancedDropdownComponent } from '../../shared/layouts/advanced-dropdown/advanced-dropdown.component';\nimport { StatPipe } from '../../shared/pipes/stat.pipe';\n\n@Component({\n  selector: 'app-nature-dropdown',\n  templateUrl: '../../shared/layouts/advanced-dropdown/advanced-dropdown.component.html',\n})\nexport class NatureDropdownComponent extends AdvancedDropdownComponent {\n\n  @Input()\n  natures: Nature[];\n\n  constructor() {\n    super();\n  }\n\n  get shownItems() {\n    const text: string = this.list.value\n    if (!this.natures) return null;\n    if (!text) return this.natures.map(x => x.name);\n    return this.natures.filter(x =>\n      x.name\n      .toUpperCase()\n      .includes(text.toUpperCase()))\n      .map(x => x.name);\n  }\n\n  setItem(text: string) {\n    if (!!text) {\n      this.selected.emit(\n        this.natures.find(x => x.name.toUpperCase().includes(text.toUpperCase()))\n        );\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MainService } from '../shared/services/main.service';\nimport { Observable } from 'rxjs';\nimport { Nature } from './nature';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class NatureService extends MainService {\n\n  constructor(private http: HttpClient) {\n    super('natures/');\n  }\n\n  listNatures(): Observable<Nature[]> {\n    return this.http.get<Nature[]>(`${this.url}getAll/`);\n  }\n}\n","import { PokemonService } from \"../pokemon.service\";\nimport { PokemonSpecies } from \"./pokemon-species\";\nimport { Move } from \"../../moves/move\";\nimport { Nature } from 'src/app/nature/nature';\n\nexport class Pokemon {\n    id: number;\n    pokemonSpecies: PokemonSpecies;\n    nature: Nature;\n    userId: number;\n    nickname: string;\n    level: number;\n    hp: number;\n    attack: number;\n    defense: number;\n    spAttack: number;\n    spDefense: number\n    speed: number;\n    evHp: number;\n    evAttack: number;\n    evDefense: number;\n    evSpAttack: number;\n    evSpDefense: number\n    evSpeed: number;\n    ivHp: number;\n    ivAttack: number;\n    ivDefense: number;\n    ivSpAttack: number;\n    ivSpDefense: number\n    ivSpeed: number;\n    move1: Move;\n    move2: Move;\n    move3: Move;\n    move4: Move;\n}\n","import { PokemonSpecies } from './entities/pokemon-species';\n\nexport class PokemonDomain {\n\n  static getImgUrl(pokemonSpecies: PokemonSpecies) {\n    if (!!pokemonSpecies) {\n      return `https://img.pokemondb.net/artwork/${pokemonSpecies.name}.jpg`;\n    }\n    return '';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PokemonSpeciesService } from '../pokemon-species.service';\nimport { PokemonSpecies } from '../entities/pokemon-species';\nimport { Nature } from '../../nature/nature';\nimport { NatureService } from '../../nature/nature.service';\nimport { Stat } from '../../shared/enums/stat.enum';\nimport { Pokemon } from '../entities/pokemon';\nimport { PokemonService } from '../pokemon.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { NatureDomain } from '../../nature/nature-domain';\nimport { Move } from '../../moves/move';\nimport { MoveService } from '../../moves/move.service';\nimport { MoveDomain } from '../../moves/move-domain';\nimport { PokemonDomain } from '../pokemon-domain';\n\n@Component({\n  selector: 'app-pokemon-register',\n  templateUrl: './pokemon-register.component.html',\n  styleUrls: ['./pokemon-register.component.css']\n})\nexport class PokemonRegisterComponent implements OnInit {\n\n  speciesIdParam: string;\n  pokemonIdParam: string;\n  pokemon_species: PokemonSpecies;\n  pokemon: Pokemon = new Pokemon();\n  pokemonForm: FormGroup;\n  natures: Nature[];\n  moves: Move[];\n  totalEvLeft: number = 510;\n\n  constructor(\n    private route: ActivatedRoute,\n    private pokemonSpeciesService: PokemonSpeciesService,\n    private pokemonService: PokemonService,\n    private natureService: NatureService,\n    private moveService: MoveService,\n    private toastr: ToastrService,\n    private authService: AuthService,\n    fb: FormBuilder) {\n      this.route.params.subscribe( params => {\n        this.speciesIdParam = params.species_id;\n        this.pokemonIdParam = params.pokemon_id;\n      });\n      this.pokemonForm = fb.group({\n        level: [5, Validators.compose([Validators.required, Validators.min(1), Validators.max(100)])],\n        nature: [null, Validators.compose([Validators.required])],\n        ivHp: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(31)])],\n        ivAttack: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(31)])],\n        ivDefense: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(31)])],\n        ivSpAttack: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(31)])],\n        ivSpDefense: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(31)])],\n        ivSpeed: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(31)])],\n        evHp: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(252)])],\n        evAttack: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(252)])],\n        evDefense: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(252)])],\n        evSpAttack: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(252)])],\n        evSpDefense: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(252)])],\n        evSpeed: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(252)])],\n        move1: [null],\n        move2: [null],\n        move3: [null],\n        move4: [null]\n      });\n      this.initializeObjects();\n      this.pokemonForm.valueChanges.subscribe(values => {\n        this.refreshStats();\n      });\n    }\n\n  ngOnInit(): void {\n    if (!this.isLogged()) {\n      this.toastr.warning(\n        'You have to log in to register a Pokemon',\n        'Warning',\n        { disableTimeOut : true}\n      );\n    }\n  }\n\n  getImgUrl(pokemonSpecies: PokemonSpecies) {\n    return PokemonDomain.getImgUrl(pokemonSpecies);\n  }\n\n  private initializeObjects() {\n    if (!!this.pokemonIdParam) {\n      this.pokemonService.getPokemon(this.pokemonIdParam).subscribe(resp => {\n        this.pokemon = resp;\n        this.pokemon_species = resp.pokemonSpecies;\n        this.pokemonForm.patchValue(resp);\n      })\n    }\n    else {\n      this.pokemonSpeciesService.getPokemonSpecies(this.speciesIdParam).subscribe(resp => {\n        this.pokemon_species = resp;\n        this.refreshStats();\n      });\n    }\n\n    this.moveService.listMoves().subscribe( resp => {\n      this.moves = resp;\n      this.moves.forEach(move => {\n        move.name = MoveDomain.setMoveName(move);\n      });\n    });\n    this.natureService.listNatures().subscribe( resp => {\n      this.natures = resp;\n      this.natures.forEach(nature => {\n        nature.name = NatureDomain.defineNatureText(nature);\n      });\n    });\n  }\n\n  savePokemon() {\n    let newPokemon: Pokemon = Object.assign(this.pokemon, this.pokemonForm.value);\n    newPokemon.pokemonSpecies = this.pokemon_species;\n    if (!this.pokemonIdParam) {\n      this.pokemonService.savePokemon(newPokemon).subscribe(\n        resp => {\n          this.toastr.success('Pokemon successfully created');\n        },\n        err => {\n          console.log(err);\n          this.toastr.error(err.error.message);\n        });\n    }\n    else {\n      this.pokemonService.updatePokemon(newPokemon, this.pokemonIdParam).subscribe(\n        resp => {\n          this.toastr.success('Pokemon successfully updated');\n        },\n        err => {\n          console.log(err);\n          this.toastr.error(err.error.message);\n        });\n    }\n  \n  }\n\n  isLogged() {\n    return this.authService.isLogged();\n  }\n\n  //STATS\n  validateIVs() {\n    return this.pokemonForm.get('ivHp').valid &&\n      this.pokemonForm.get('ivAttack').valid &&\n      this.pokemonForm.get('ivDefense').valid &&\n      this.pokemonForm.get('ivSpAttack').valid &&\n      this.pokemonForm.get('ivSpDefense').valid &&\n      this.pokemonForm.get('ivSpeed').valid;\n  }\n\n  validateEVs() {\n    return this.pokemonForm.get('evHp').valid &&\n      this.pokemonForm.get('evAttack').valid &&\n      this.pokemonForm.get('evDefense').valid &&\n      this.pokemonForm.get('evSpAttack').valid &&\n      this.pokemonForm.get('evSpDefense').valid &&\n      this.pokemonForm.get('evSpeed').valid;\n  }\n\n  validateEVsTotal() {\n    const ev_total = this.pokemonForm.get('evHp').value +\n    this.pokemonForm.get('evAttack').value +\n    this.pokemonForm.get('evDefense').value +\n    this.pokemonForm.get('evSpAttack').value +\n    this.pokemonForm.get('evSpDefense').value +\n    this.pokemonForm.get('evSpeed').value;\n    this.totalEvLeft = 510 - ev_total;\n    return ev_total <= 510;\n  }\n\n  SetIvsToMax() {\n    this.pokemonForm.get('ivHp').setValue(31);\n    this.pokemonForm.get('ivAttack').setValue(31);\n    this.pokemonForm.get('ivDefense').setValue(31);\n    this.pokemonForm.get('ivSpAttack').setValue(31);\n    this.pokemonForm.get('ivSpDefense').setValue(31);\n    this.pokemonForm.get('ivSpeed').setValue(31);\n  }\n\n  private refreshStats(){\n    this.pokemon.hp = Math.round(this.calculateHP());\n    this.pokemon.attack = Math.round(this.calculateStat('Attack', Stat.Attack, this.pokemon_species.baseAttack));\n    this.pokemon.defense = Math.round(this.calculateStat('Defense', Stat.Defense, this.pokemon_species.baseDefense));\n    this.pokemon.spAttack = Math.round(this.calculateStat('SpAttack', Stat.SpecialAttack, this.pokemon_species.baseSpAttack));\n    this.pokemon.spDefense = Math.round(this.calculateStat('SpDefense', Stat.SpecialDefense, this.pokemon_species.baseSpDefense));\n    this.pokemon.speed = Math.round(this.calculateStat('Speed', Stat.Speed, this.pokemon_species.baseSpeed));\n  }\n\n  private calculateHP(): number {\n    const iv = this.pokemonForm.get('ivHp').value;\n    const ev = this.pokemonForm.get('evHp').value;\n    const level = this.pokemonForm.get('level').value;\n    return (((this.pokemon_species.baseHp * 2 + iv + ( ev / 4 )) * level ) / 100 ) + level + 10;\n  }\n\n  private calculateStat(statString: string, stat: Stat, baseStat: number): number {\n    const iv = this.pokemonForm.get(`iv${statString}`).value;\n    const ev = this.pokemonForm.get(`ev${statString}`).value;\n    const level = this.pokemonForm.get('level').value;\n    return ((((baseStat * 2 + iv  + ( ev / 4 )) * level ) / 100 ) + 5) * this.calculateNature(stat);\n  }\n\n  //MOVE\n\n  setMove1(move: Move) {\n    this.pokemonForm.get(\"move1\").setValue(move);\n  }\n\n  setMove2(move: number) {\n    this.pokemonForm.get(\"move2\").setValue(move);\n  }\n\n  setMove3(move: number) {\n    this.pokemonForm.get(\"move3\").setValue(move);\n  }\n\n  setMove4(move: number) {\n    this.pokemonForm.get(\"move4\").setValue(move);\n  }\n\n  //NATURE\n\n  setNature(natureId: Nature) {\n    this.pokemonForm.get('nature').setValue(natureId);\n    this.refreshStats();\n  }\n\n  private calculateNature(stat: Stat): number {\n    const natureSelected = this.pokemonForm.get('nature').value\n    if (!natureSelected) {\n      return 1;\n    }\n    if (natureSelected.strongStat == stat) {\n      return 1.1\n    }\n    if (natureSelected.weakStat == stat) {\n      return 0.9\n    }\n    return 1;\n  }\n\n}\n","<form [formGroup]=\"pokemonForm\" (ngSubmit)=\"savePokemon()\">\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"panel panel-primary\">\n      <div class=\"panel-heading\">\n        <span class=\"title title-casual\">#{{ pokemon_species.id }} {{ pokemon_species.name | uppercase }}</span>\n      </div>\n      <div class=\"panel-body\">\n        <div class=\"row\">\n          <div class=\"col-md-4 col-sm-4\">\n            <div class=\"image-div image-div-big\">\n              <img class=\"pokemon-img-large\" [src]=\"getImgUrl(pokemon_species)\">\n            </div>\n            <div class=\"row\">\n              <span class=\"type type-{{ pokemon_species.firstType.name }}\">\n                {{ pokemon_species.firstType.name | uppercase }}\n              </span>\n              <span *ngIf=\"pokemon_species.secondType\" class=\"type type-{{ pokemon_species.secondType.name }}\">\n                  {{ pokemon_species.secondType.name | uppercase }}\n              </span>\n            </div>\n          </div>\n          <div class=\"col-md-4 col-sm-4 left-div\">\n            <h3>Base Stats</h3>\n            <p>Hp: {{ pokemon_species.baseHp }}</p>\n            <p>Attack: {{ pokemon_species.baseAttack }}</p>\n            <p>Defense: {{ pokemon_species.baseDefense }}</p>\n            <p>Special Attack: {{ pokemon_species.baseSpAttack }}</p>\n            <p>Special Defense: {{ pokemon_species.baseSpDefense }}</p>\n            <p>Speed: {{ pokemon_species.baseSpeed }}</p>\n          </div>\n          <div class=\"col-md-4 col-sm-4\">\n            <div class=\"field\">\n              <label class=\"required-field\">Level</label>\n              <input formControlName=\"level\" class=\"form-control\" type=\"number\">\n            </div>\n            <div class=\"field u-margin-top-medium\">\n                <app-nature-dropdown [natures]=\"natures\" [selectedItem]=\"pokemon.nature\" [placeholder]=\"'Select a nature'\" (selected)=\"setNature($event)\"></app-nature-dropdown>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <h3>Final Stats</h3>\n            <div class=\"field\">\n              <label>HP: </label>\n              <p id=\"pokemonHp\">{{ pokemon.hp }}</p>\n            </div>\n            <div class=\"field\">\n              <label>Attack:</label>\n              <p id=\"pokemonAttack\">{{ pokemon.attack }}</p>\n            </div>\n            <div class=\"field\">\n              <label>Defense:</label>\n              <p id=\"pokemonDefense\">{{ pokemon.defense }}</p>\n            </div>\n            <div class=\"field\">\n              <label>Special Attack:</label>\n              <p id=\"pokemonSpAttack\">{{ pokemon.spAttack }}</p>\n            </div>\n            <div class=\"field\">\n              <label>Special Defense</label>\n              <p id=\"pokemonSpDefense\">{{ pokemon.spDefense }}</p>\n            </div>\n            <div class=\"field\">\n              <span>Speed</span>\n              <p id=\"pokemonSpeed\">{{ pokemon.speed }}</p>\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"col-md-12\">\n              <h3>IVs</h3>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"field\">\n                <label class=\"required-field\">IV Attack</label>\n                <input formControlName=\"ivAttack\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">IV Defense</label>\n                <input formControlName=\"ivDefense\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">IV Special Attack</label>\n                <input formControlName=\"ivSpAttack\" class=\"form-control\" type=\"number\">\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"field\">\n                  <label class=\"required-field\">IV Special Defense</label>\n                <input formControlName=\"ivSpDefense\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">IV Speed</label>\n                <input formControlName=\"ivSpeed\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">IV HP</label>\n                <input formControlName=\"ivHp\" class=\"form-control\" type=\"number\">\n              </div>\n            </div>\n            <div class=\"col-md-6 u-margin-top-medium\">\n              <div class=\"field\">\n                <button class=\"btn btn-success\" (click)=\"SetIvsToMax()\" type=\"button\">Set to Max</button>\n                <p class=\"error-message\" *ngIf=\"!validateIVs()\">All IV must be informed and lower than 31</p>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <div class=\"col-md-12\">\n              <h3>EVs</h3>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"field\">\n                <label class=\"required-field\">EV Attack</label>\n                <input formControlName=\"evAttack\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">EV Defense</label>\n                <input formControlName=\"evDefense\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">EV Special Attack</label>\n                <input formControlName=\"evSpAttack\" class=\"form-control\" type=\"number\">\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"field\">\n                <label class=\"required-field\">EV Special Defense</label>\n                <input formControlName=\"evSpDefense\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">EV Speed</label>\n                <input formControlName=\"evSpeed\" class=\"form-control\" type=\"number\">\n              </div>\n              <div class=\"field\">\n                <label class=\"required-field\">EV HP</label>\n                <input formControlName=\"evHp\" class=\"form-control\" type=\"number\">\n              </div>\n            </div>\n            <div class=\"col-md-6 u-margin-top-medium\">\n              <div class=\"field\">\n                <p>EV points left: {{totalEvLeft}}</p>\n                <p class=\"error-message\" *ngIf=\"!validateEVs()\">All EV must be informed and lower than 252</p>\n                <p class=\"error-message\" *ngIf=\"!validateEVsTotal()\">The some of all EV must be lower than 510</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">\n            <div class=\"field\">\n              <app-move-dropdown [moves]=\"moves\" [selectedItem]=\"pokemon.move1\" [placeholder]=\"'Move 1'\" (selected)=\"setMove1($event)\"></app-move-dropdown>\n            </div>\n          </div>\n          <div class=\"col-md-3\">\n            <div class=\"field\">\n                <app-move-dropdown [moves]=\"moves\" [selectedItem]=\"pokemon.move2\" [placeholder]=\"'Move 2'\" (selected)=\"setMove2($event)\"></app-move-dropdown>\n            </div>\n          </div>\n          <div class=\"col-md-3\">\n            <div class=\"field\">\n                <app-move-dropdown [moves]=\"moves\" [selectedItem]=\"pokemon.move3\" [placeholder]=\"'Move 3'\" (selected)=\"setMove3($event)\"></app-move-dropdown>\n            </div>\n          </div>\n          <div class=\"col-md-3\">\n            <div class=\"field\">\n                <app-move-dropdown [moves]=\"moves\" [selectedItem]=\"pokemon.move4\" [placeholder]=\"'Move 4'\" (selected)=\"setMove4($event)\"></app-move-dropdown>\n            </div>\n          </div>\n        </div>\n        <div class=\"actions right-div\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!pokemonForm.valid\">Create Pokemon</button>\n        </div>\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { PokemonSpeciesService } from '../pokemon-species.service';\nimport { PokemonSpecies } from '../entities/pokemon-species';\nimport { PokemonDomain } from '../pokemon-domain';\n\n\n@Component({\n  selector: 'app-pokemon-search',\n  templateUrl: './pokemon-search.component.html',\n  styleUrls: ['./pokemon-search.component.css']\n})\nexport class PokemonSearchComponent {\n\n  pokemonSearchForm: FormGroup;\n  pokemonSpecies: PokemonSpecies[];\n\n  constructor(\n    private pokemonSpeciesServie: PokemonSpeciesService,\n    fb: FormBuilder\n  ) {\n    this.pokemonSearchForm = fb.group({\n      name: []\n    });\n    pokemonSpeciesServie\n  }\n\n  searchPokemons() {\n    this.pokemonSpeciesServie.listPokemonSpecies(\n      this.pokemonSearchForm.get('name').value\n    ).subscribe((resp) => {\n      this.pokemonSpecies = resp;\n    });\n  }\n\n  getImgUrl(pokemonSpecies: PokemonSpecies) {\n    return PokemonDomain.getImgUrl(pokemonSpecies);\n  }\n\n  getBaseStatTotal(pokemon: PokemonSpecies): number {\n    return pokemon.baseAttack + pokemon.baseDefense + pokemon.baseHp + pokemon.baseSpAttack + pokemon.baseSpDefense + pokemon.baseSpeed;\n  }\n\n}\n","<form [formGroup]=\"pokemonSearchForm\" (ngSubmit)=\"searchPokemons()\">\n  <div class=\"row\">\n    <div class=\"form-group col-md-3\">\n        <input formControlName=\"name\" class=\"form-control\" placeholder=\"Type the name of a pokemon\">\n      </div>\n      <div class=\"form-group col-md-2\">\n        <button type=\"submit\" class=\"btn btn-primary\">Find Pokemon</button>\n    </div>\n  </div>\n</form>\n<div *ngIf=\"pokemonSpecies\" class=\"row\">\n  <div class=\"containter\">\n    <ng-container *ngFor=\"let pokemon of pokemonSpecies;\">\n    <div class=\"col-md-4 col-sm-6 col-xs-12\">\n      <a href=\"pokemon/{{pokemon.id}}\">\n      <div class=\"panel panel-primary panel-link\">\n        <div class=\"panel-heading\">\n          <span>{{ pokemon.name | uppercase }}</span>\n        </div>\n        <div class=\"panel-body\">\n          <div class=\"col-md-4 col-sm-4 image-div image-div-small\">\n            <img class=\"pokemon-img\" [src]=\"getImgUrl(pokemon)\">\n          </div>\n          <div class=\"col-md-8 col-sm-8\">\n            <div class=\"row\">\n              <span class=\"type type-{{pokemon.firstType.name}}\">\n                {{ pokemon.firstType.name | uppercase }}\n              </span>\n              <span *ngIf=\"pokemon.secondType\">\n                <span class=\"type type-{{pokemon.secondType.name}}\">\n                    {{ pokemon.secondType.name | uppercase }}\n                </span>\n              </span>\n            </div>\n            <div class=\"row panel-content\">\n              <span class=\"panel-content-text\">Base stats: {{ getBaseStatTotal(pokemon) }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </a>\n    </div>\n  </ng-container>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { MainService } from '../shared/services/main.service';\nimport { Observable } from 'rxjs';\nimport { PokemonSpecies } from './entities/pokemon-species';\n\n@Injectable()\nexport class PokemonSpeciesService extends MainService {\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super('pokemonSpecies/');\n  }\n\n  listPokemonSpecies(name: string): Observable<PokemonSpecies[]> {\n    const body = { params: new HttpParams().set('name', name)}\n    return this.http.get<PokemonSpecies[]>(this.url + \"getByName/\", body);\n  }\n\n  getPokemonSpecies(id: string): Observable<PokemonSpecies> {\n    const body = { params: new HttpParams().set('id', id)}\n    return this.http.get<PokemonSpecies>(this.url + \"getById/\", body);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MainService } from '../shared/services/main.service';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Pokemon } from './entities/pokemon';\n\n@Injectable()\nexport class PokemonService extends MainService {\n\n  constructor(\n    private http: HttpClient) {\n    super('pokemons/');\n  }\n\n  listPokemons(): Observable<Pokemon[]> {\n    return this.http.get<Pokemon[]>(`${this.url}getAll`);\n  }\n\n  getPokemon(id: string): Observable<Pokemon> {\n    return this.http.get<Pokemon>(`${this.url}getByid/${id}`);\n  }\n\n  savePokemon(pokemon: Pokemon): Observable<Pokemon> {\n    return this.http.post<Pokemon>(`${this.url}create`, pokemon);\n  }\n\n  updatePokemon(pokemon: Pokemon, id: string): Observable<Pokemon> {\n    return this.http.put<Pokemon>(`${this.url}update/${id}`, pokemon)\n  }\n\n  deletePokemon(id: number): Observable<Pokemon> {\n    return this.http.delete<Pokemon>(`${this.url}delete/${id}`);\n  }\n\n}\n","export enum MoveCategory {\n    Physical = 1,\n    Special = 2,\n    Status = 3\n}\n","export enum Stat {\n    HP = 1,\n    Attack = 2,\n    Defense = 3,\n    SpecialAttack = 4,\n    SpecialDefense = 5,\n    Speed = 6\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { BasicDropdownEntity } from '../basic-dropdown/basic-dropdown-entity';\n\n@Component({\n  selector: 'app-advanced-dropdown',\n  templateUrl: './advanced-dropdown.component.html'\n})\nexport class AdvancedDropdownComponent {\n\n  list = new FormControl();\n\n  @Input()\n  items: string[];\n\n  @Input()\n  placeholder: string;\n\n  inputLabel: string;\n\n  @Input()\n  set selectedItem(selectedItem: BasicDropdownEntity) {\n    if (!!selectedItem) {\n      this.inputLabel = selectedItem.name;\n    }\n  }\n\n  @Output()\n  selected = new EventEmitter<any>();\n\n  checkbox: boolean = false\n\n  constructor() {\n    this.list.valueChanges.subscribe(text => {\n      this.setItem(text);\n    });\n  }\n\n  get shownItems() {\n    const text: string = this.list.value\n    if (!text) return this.items;\n    return this.items.filter(x => x.includes(text));\n  }\n\n  setItem(text: string) {\n    if (!!text) {\n      this.selected.emit(\n        this.items.find(x => text.toUpperCase().includes(x.toUpperCase()))\n        );\n    }\n  }\n}\n","export class BasicDropdownEntity {\n    id: number;\n    name: string\n\n    constructor (id: number, name: string) {\n      this.id = id;\n      this.name = name;\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-basic-dropdown',\n  templateUrl: './basic-dropdown.component.html',\n  styleUrls: ['./basic-dropdown.component.css']\n})\nexport class BasicDropdownComponent implements OnInit {\n\n  @Input()\n  items: any[]\n\n  @Input()\n  itemTitle: string;\n\n  @Input()\n  selectedItem: any = { id: 0 };\n  \n  @Input() \n  clear: Subject<boolean> = new Subject();\n\n  @Output()\n  itemSelected = new EventEmitter<string>();\n\n  ngOnInit(): void {\n    this.clear.subscribe(() => { \n      this.selectedItem = 0\n   });\n  }\n\n\n  setItem(id: string) {\n    this.selectedItem = id;\n    this.itemSelected.emit(id);\n  }\n}","<select class=\"form-control\" (change)=\"setItem($event.target.value)\">\n    <option value=\"0\">--Select one {{itemTitle}}--</option>\n    <option *ngFor=\"let item of items; let i = index\" value={{item.id}} [selected]=\"item.id == selectedItem\">\n        {{item.name}}\n    </option>\n</select>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n  showToggleItems: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router) {\n    this.showToggleItems = false;\n  }\n\n  getCSSClass() {\n    if(this.showToggleItems) {\n      return \"navbar-collapse\";\n    }\n    return \"navbar-collapse collapse\";\n  }\n\n  toggleClicked() {\n    this.showToggleItems = !this.showToggleItems;\n  }\n\n  isLogged() {\n    return this.authService.isLogged();\n  }\n\n  logout() {\n    this.authService.clear();\n    this.router.navigateByUrl(\"/login\");\n  }\n\n}\n","<div class=\"navbar navbar-inverse set-radius-zero\" >\n  <div class=\"container\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" (click)=\"toggleClicked()\">\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n      <!-- <h1 class=\"title title-main\">POKE SIMULATOR</h1> -->\n      <img class=\"navbar-img\" src=\"./assets/images/pokemon calculator.png\"/>\n    </div>\n    <div>\n      <img class=\"navbar-img\" src=\"./assets/images/pokemon_PNG127.png\"/>\n    </div>\n    <!-- <div class=\"right-div\">\n      <a href=\"#\" class=\"btn btn-danger pull-right\">LOG ME OUT</a>\n    </div> -->\n  </div>\n</div>\n<section class=\"menu-section\">\n  <div class=\"container\">\n    <div class=\"row \">\n      <div class=\"col-md-12\">\n        <div [class]=\"getCSSClass()\">\n          <ul id=\"menu-top\" class=\"nav navbar-nav navbar-right\">\n            <li><a href=\"/\" class=\"menu-top-active\">Home</a></li>\n            <li><a href=\"/search\">New Pokemon</a></li>\n            <li><a href=\"/simulation\">Simulate Battle</a></li>\n            <li *ngIf=\"!isLogged()\"><a href=\"/login\">Log in</a></li>\n            <li *ngIf=\"isLogged()\"><a (click)=\"logout()\">Log out</a></li>\n            <!-- <li>\n              <a href=\"#\" class=\"dropdown-toggle\" id=\"ddlmenuItem\" data-toggle=\"dropdown\">UI ELEMENTS <i class=\"fa fa-angle-down\"></i></a>\n              <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"ddlmenuItem\">\n                <li role=\"presentation\"><a role=\"menuitem\" tabindex=\"-1\" href=\"ui.html\">UI ELEMENTS</a></li>\n                <li role=\"presentation\"><a role=\"menuitem\" tabindex=\"-1\" href=\"#\">EXAMPLE LINK</a></li>\n              </ul>\n            </li>\n            <li><a href=\"tab.html\">TABS & PANELS</a></li>\n            <li><a href=\"table.html\">TABLES</a></li>\n            <li><a href=\"blank.html\">BLANK PAGE</a></li> -->\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { MoveCategory } from '../enums/move-category.enum';\n\n@Pipe({\n  name: 'MoveCategory'\n})\nexport class MoveCategoryPipe implements PipeTransform {\n\n  transform(moveCategory: MoveCategory): any {\n    switch(moveCategory) {\n      case MoveCategory.Physical: {\n        return 'Physical'\n      }\n      case MoveCategory.Special: {\n        return 'Special'\n      }\n      case MoveCategory.Status: {\n        return 'Status'\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Stat } from '../enums/stat.enum';\n\n@Pipe({\n  name: 'Stat'\n})\nexport class StatPipe implements PipeTransform {\n\n  transform(stat: Stat): any {\n    switch(stat) {\n      case Stat.Attack: {\n        return 'Attack'\n      }\n      case Stat.Defense: {\n        return 'Defense'\n      }\n      case Stat.SpecialAttack: {\n        return 'Special Attack'\n      }\n      case Stat.SpecialDefense: {\n        return 'Special Defense'\n      }\n      case Stat.Speed: {\n        return 'Speed'\n      }\n      case Stat.HP: {\n        return 'HP'\n      }\n      default: {\n        return 'None'\n      }\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { MainService } from './main.service';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Auth } from '../../user/entities/auth';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '../../user/entities/user';\n\n@Injectable()\nexport class AuthService extends MainService {\n\n  constructor(private http: HttpClient) {\n    super('Auth/');\n  }\n\n  login(user: User): Observable<any> {\n    return this.http.post<any>(`${this.url}login`, user);\n  }\n\n  signUp(user: User): Observable<any> {\n    return this.http.post<any>(`${this.url}register`, user);\n  }\n\n  setToken(token: string): void {\n    localStorage.setItem(this.TOKEN, token);\n  }\n\n  isLogged() {\n    return localStorage.getItem(this.TOKEN) != null;\n  }\n\n  clear(): void {\n    localStorage.removeItem(this.TOKEN);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpHeaders } from '@angular/common/http';\n\nexport abstract class MainService {\n\n  protected TOKEN = 'TOKEN';\n  protected headers: HttpHeaders\n\n  protected url: string\n  constructor(object: string) {\n      this.url = environment.baseUrl + object;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n    protected TOKEN = 'TOKEN';\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n    {\n        var token = localStorage.getItem(this.TOKEN);\n        if (!!token)\n        {\n            request = request.clone({\n                setHeaders: {\n                    'Authorization': localStorage.getItem(this.TOKEN)\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PokemonService } from '../../pokemon/pokemon.service';\nimport { Pokemon } from '../../pokemon/entities/pokemon';\nimport { BasicDropdownEntity } from '../../shared/layouts/basic-dropdown/basic-dropdown-entity';\nimport { MoveCategoryPipe } from '../../shared/pipes/move-category.pipe';\nimport { SimulationPokemon } from '../simulation-pokemon';\nimport { FormGroup } from '../../../../node_modules/@angular/forms';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { PokemonDomain } from '../../pokemon/pokemon-domain';\nimport { BasicDropdownComponent } from 'src/app/shared/layouts/basic-dropdown/basic-dropdown.component';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-simulation-card',\n  templateUrl: './simulation-card.component.html',\n  styleUrls: ['./simulation-card.component.css'],\n})\nexport class SimulationCardComponent implements OnInit {\n\n  pokemonsDropdown: BasicDropdownEntity[] = [];\n  movesDropdown: BasicDropdownEntity[];\n  pokemons: Pokemon[];\n  simulationPokemon: SimulationPokemon;\n\n  POKEMON_DROPDOWN_TITLE = 'Pokemon';\n  moveDROPDOWN_TITLE = 'Move'\n\n  @Input()\n  simulationForm: FormGroup;\n\n  @Input()\n  title: string\n\n  @Input()\n  isAttacking: boolean = false;\n  \n  @Input()\n  selectedPokemon: number;\n\n  @Output()\n  changed = new EventEmitter<SimulationPokemon>();\n\n  clearMoveDrop: Subject<boolean> = new Subject();\n\n  constructor(\n    private authService: AuthService,\n    private pokemonService: PokemonService) {\n   }\n\n  ngOnInit() {\n    this.listPokemons();\n  }\n\n  listPokemons() {\n    this.pokemonService.listPokemons().subscribe( resp => {\n      this.pokemons = resp;\n      resp.forEach(pokemon => {\n        const pokemonName = `${pokemon.pokemonSpecies.name.toUpperCase()} - level ${pokemon.level}`\n        this.pokemonsDropdown.push(new BasicDropdownEntity(pokemon.id, pokemonName));\n      });\n      if (!!this.selectedPokemon) {\n        this.setPokemon(this.selectedPokemon.toString());\n      }\n    })\n  }\n\n  setPokemon(id: string) {\n    this.clearForm();\n    if (this.authService.isLogged())\n    {\n      this.pokemonService.getPokemon(id).subscribe(resp => {\n        this.simulationPokemon = new SimulationPokemon(resp);\n        if (this.isAttacking) {\n          this.simulationForm.get('attacking_pokemon_id').setValue(resp.id);\n          this.movesDropdown = []\n          if(!!resp.move1) {\n            let move1_text = `${resp.move1.name} - Power: ${resp.move1.basePower} - ${resp.move1.category}`\n            this.movesDropdown.push(new BasicDropdownEntity(1, move1_text));\n          }\n          if (!!resp.move2) {\n            let move2_text = `${resp.move2.name} - Power: ${resp.move2.basePower} - ${resp.move2.category}`\n            this.movesDropdown.push(new BasicDropdownEntity(2, move2_text));\n          }\n          if (!!resp.move3) {\n            let move3_text = `${resp.move3.name} - Power: ${resp.move3.basePower} - ${resp.move3.category}`\n            this.movesDropdown.push(new BasicDropdownEntity(3, move3_text));\n          }\n          if (!!resp.move4) {\n            let move4_text = `${resp.move4.name} - Power: ${resp.move4.basePower} - ${resp.move4.category}`\n            this.movesDropdown.push(new BasicDropdownEntity(4, move4_text));\n          }\n        } else {\n          this.simulationForm.get('defending_pokemon_id').setValue(resp.id);\n        }\n        this.changed.emit(this.simulationPokemon);\n      });\n    }\n    else {\n      this.setPokemonCache(+id);\n    }\n  }\n\n  clearForm() {\n    this.movesDropdown = []\n    this.clearMoveDrop.next(true);\n    // if (this.isAttacking)\n    // {\n    //   this.simulationForm.get('moveid').setValue(0);\n    // }\n    this.changed.emit(null);\n    \n  }\n\n  setPokemonCache(id: number) {\n    let selectedPokemon = this.pokemons.find(x => x.id == id);\n    this.simulationPokemon = new SimulationPokemon(selectedPokemon);\n    if (this.isAttacking) {\n      this.simulationForm.get('attacking_pokemon_id').setValue(selectedPokemon.id);\n      if(!!selectedPokemon.move1) {\n        let move1_text = `${selectedPokemon.move1.name} - Power: ${selectedPokemon.move1.basePower} - ${selectedPokemon.move1.category}`\n        this.movesDropdown.push(new BasicDropdownEntity(1, move1_text));\n      }\n      if (!!selectedPokemon.move2) {\n        let move2_text = `${selectedPokemon.move2.name} - Power: ${selectedPokemon.move2.basePower} - ${selectedPokemon.move2.category}`\n        this.movesDropdown.push(new BasicDropdownEntity(2, move2_text));\n      }\n      if (!!selectedPokemon.move3) {\n        let move3_text = `${selectedPokemon.move3.name} - Power: ${selectedPokemon.move3.basePower} - ${selectedPokemon.move3.category}`\n        this.movesDropdown.push(new BasicDropdownEntity(3, move3_text));\n      }\n      if (!!selectedPokemon.move4) {\n        let move4_text = `${selectedPokemon.move4.name} - Power: ${selectedPokemon.move4.basePower} - ${selectedPokemon.move4.category}`\n        this.movesDropdown.push(new BasicDropdownEntity(4, move4_text));\n      }\n    } else {\n      this.simulationForm.get('defending_pokemon_id').setValue(selectedPokemon.id);\n    }\n    this.changed.emit(this.simulationPokemon);\n  }\n\n  setMove(id: string) {\n    let move\n    switch(id) {\n      case '1': {\n        move = this.simulationPokemon.pokemon.move1\n        break;\n      }\n      case '2': {\n        move = this.simulationPokemon.pokemon.move2\n        break;\n      }\n      case '3': {\n        move = this.simulationPokemon.pokemon.move3\n        break;\n      }\n      case '4': {\n        move = this.simulationPokemon.pokemon.move4\n        break;\n      }\n      default: {\n        move = null;\n      }\n    }\n    this.simulationForm.get('moveid').setValue(!!move ? move.id : 0);\n    this.simulationPokemon.move = move\n    this.changed.emit(this.simulationPokemon);\n  }\n\n  validatePokemon(): boolean {\n    if (this.isAttacking) {\n      return this.simulationForm.get('attacking_pokemon_id').valid || !this.simulationForm.get('attacking_pokemon_id').dirty;\n    }\n    return this.simulationForm.get('defending_pokemon_id').valid || !this.simulationForm.get('defending_pokemon_id').dirty;\n  }\n\n  validateMove(): boolean {\n    return this.simulationForm.get('moveid').valid || !this.simulationForm.get('moveid').dirty;\n  }\n\n  getImgUrl() {\n    if(!this.simulationPokemon) {\n      return null;\n    }\n    return PokemonDomain.getImgUrl(this.simulationPokemon.pokemon.pokemonSpecies);\n  }\n\n  isLogged() {\n    return this.authService.isLogged();\n  }\n\n}\n","<form [formGroup]=\"simulationForm\">\n<div class=\"panel panel-default\">\n    <div class=\"panel-heading\">\n      <b>{{title}}</b>\n    </div>\n    <div class=\"panel-body\">\n   <!--    <ul class=\"nav nav-pills\">\n        <li class=\"active\"><a href=\"#attacking-my-pokemon\" data-toggle=\"tab\">My Pokemon</a>\n        </li>\n        <li class=\"\"><a href=\"#attacking-new-pokemon\" data-toggle=\"tab\">New Pokemon</a>\n        </li>\n        <li class=\"\"><a href=\"#attacking-advanced\" data-toggle=\"tab\">Advanced</a>\n        </li>\n      </ul> -->\n\n      <div class=\"tab-content\">\n        <div class=\"tab-pane fade active in\" id=\"attacking-my-pokemon\">\n          <h4>Select your pokemon</h4>\n          <app-basic-dropdown [items]=\"pokemonsDropdown\" [itemTitle]=\"POKEMON_DROPDOWN_TITLE\" (itemSelected)=\"setPokemon($event)\"></app-basic-dropdown>\n          <p class=\"error-message\" *ngIf=\"!validatePokemon()\">A pokemon must be selected</p>\n          <div class=\"left-div\" *ngIf=\"getImgUrl()\">\n            <div class=\"image-div image-div-small\">\n              <img id=\"attacking_pokemon_img\" class=\"pokemon-img\" [src]=\"getImgUrl()\">\n            </div>\n            <label class=\"title title-casual\">{{ simulationPokemon.pokemon.pokemonSpecies.name.toUpperCase() }}</label>\n            <p>HP: {{ simulationPokemon.pokemon.hp }}</p>\n            <p>Attack: {{ simulationPokemon.pokemon.attack }}</p>\n            <p>Defense: {{ simulationPokemon.pokemon.defense }}</p>\n            <p>Special Attack: {{ simulationPokemon.pokemon.spAttack }}</p>\n            <p>Special Defense: {{ simulationPokemon.pokemon.spDefense }}</p>\n            <p>Speed: {{ simulationPokemon.pokemon.speed }}</p>\n            <div *ngIf=\"isAttacking\">\n              <app-basic-dropdown [items]=\"movesDropdown\" [itemTitle]=\"moveDROPDOWN_TITLE\" (itemSelected)=\"setMove($event)\" [clear]=\"clearMoveDrop\"></app-basic-dropdown>\n              <p class=\"error-message\" *ngIf=\"!validateMove()\">A move must be selected</p>\n              <label>Modifier</label><br>\n              <input formControlName=\"modifier\" type=\"number\" class=\"form-control\"/>\n            </div>\n          </div>\n        <!-- <div class=\"tab-pane fade\" id=\"attacking-new-pokemon\">\n          <h4>Profile Tab</h4>\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n        </div>\n        <div class=\"tab-pane fade\" id=\"attacking-advanced\">\n          <h4>Messages Tab</h4>\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n        </div> -->\n      </div>\n    </div>\n  </div>\n</div>\n</form>\n","import { Pokemon } from \"../pokemon/entities/pokemon\";\nimport { Move } from \"../moves/move\";\n\nexport class SimulationPokemon {\n    pokemon: Pokemon;\n    move: Move;\n\n    constructor(pokemon: Pokemon) {\n        this.pokemon = pokemon;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { MainService } from '../shared/services/main.service';\nimport { Observable } from 'rxjs';\nimport { SimulationDto } from './simulation-dto';\nimport { SimulationReturnDto } from './simulation-return-dto';\n\n@Injectable()\nexport class SimulationService extends MainService {\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super('simulation');\n  }\n\n  getDamage(simulationDto: SimulationDto): Observable<SimulationReturnDto> {\n    const params = new HttpParams()\n      .set('attackingPokemonId', simulationDto.attacking_pokemon_id.toString())\n      .set('defendingPokemonId', simulationDto.defending_pokemon_id.toString())\n      .set('moveId', simulationDto.moveid.toString())\n      .set('modifier', simulationDto.modifier.toString());\n    return this.http.get<SimulationReturnDto>(`${this.url}/getDamage`, { headers: this.headers, params: params});\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SimulationPokemon } from '../simulation-pokemon';\nimport { SimulationService } from '../simulation.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '../../../../node_modules/@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-simulation',\n  templateUrl: './simulation.component.html',\n  styleUrls: ['./simulation.component.css']\n})\nexport class SimulationComponent {\n\n  attackingPokemon: SimulationPokemon;\n  paramId: number;\n  defendingPokemon: SimulationPokemon;\n  ATTACKING_POKEMON: string = \"Attacking Pokemon\";\n  DEFENDING_POKEMON: string = \"Defending Pokemon\";\n  battleResultsTitle: string;\n  battleResults: string;\n  damage: number;\n  simulationForm: FormGroup;\n\n  constructor(\n    private simulationService: SimulationService,\n    private route: ActivatedRoute,\n    private toastr: ToastrService,\n    private authService: AuthService,\n    fb: FormBuilder\n    ) {\n      this.route.params.subscribe( params => {\n        this.paramId = params.id;\n      });\n      this.simulationForm = fb.group({\n        attacking_pokemon_id: [null, Validators.required],\n        defending_pokemon_id: [null, Validators.required],\n        moveid: [null, Validators.required],\n        modifier: [1]\n      })\n  }\n\n  isLogged() {\n    return this.authService.isLogged();\n  }\n\n  updateAttackingPokemon(attackingPokemon: SimulationPokemon) {\n    this.attackingPokemon = attackingPokemon;\n  }\n\n  updateDefendingPokemon(defendingPokemon: SimulationPokemon) {\n    this.defendingPokemon = defendingPokemon;\n  }\n\n  simulateBattle() {\n    let simulationDto = this.simulationForm.getRawValue();\n    this.simulationService.getDamage(simulationDto).subscribe( resp => {\n      const damage = resp.damage;\n      const attacker_name = this.attackingPokemon.pokemon.pokemonSpecies.name\n      const defender_name = this.defendingPokemon.pokemon.pokemonSpecies.name\n      const movename = this.attackingPokemon.move.name\n      const defenderHp = this.defendingPokemon.pokemon.hp\n      this.battleResultsTitle = `Pokemon ${attacker_name.toUpperCase()} attacked ${defender_name.toUpperCase()} with ${movename}.`\n      this.battleResults = `${movename} took ${damage} of damage.\\n\n      ${defender_name.toUpperCase()} HP dropped from ${defenderHp} to ${defenderHp - damage}.\\n ${((damage/defenderHp) * 100).toFixed(0)}% of its total HP.\\n\n      ${resp.effect}`\n    });\n  }\n\n  getCSSClass() {\n    if (window.innerWidth <= 760) { // 768px portrait\n      return '';\n    }\n    return 'flex-row flex-row-align-strech';\n  }\n\n}\n","<form [formGroup]=\"simulationForm\" (ngSubmit)=\"simulateBattle()\">\n<div [class]=\"getCSSClass()\">\n  <div class=\"col-lg-5 col-md-12 col-sm-12 flex-row flex-row-align-strech flex-row-justify-center\">\n    <app-simulation-card style=\"width: 100%;\" [simulationForm]=\"simulationForm\" [isAttacking]=\"true\" [title]=\"ATTACKING_POKEMON\" [selectedPokemon]=\"paramId\" (changed)=\"updateAttackingPokemon($event)\"></app-simulation-card>\n  </div>\n\n\n  <div class=\"col-md-2 flex-row flex-row-align-center flex-row-justify-center\">\n    <button style=\"margin: 15px;\" [disabled]=\"!simulationForm.valid\" class=\"btn btn-danger\" id=\"simulate_battle\">\n      Simulate Battle\n    </button>\n  </div>\n\n  <div class=\"col-lg-5 col-md-12 col-sm-12 flex-row flex-row-align-strech flex-row-justify-center\">\n    <app-simulation-card style=\"width: 100%;\" [simulationForm]=\"simulationForm\" [title]=\"DEFENDING_POKEMON\" (changed)=\"updateDefendingPokemon($event)\"></app-simulation-card>\n  </div>\n</div>\n<div *ngIf=\"!!battleResults\" class=\"flex-row flex-row-align-strech\">\n    <div class=\"col-md-12 col-sm-12 flex-row flex-row-align-strech flex-row-justify-center\">\n      <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">\n          <b>{{ battleResultsTitle }}</b>\n        </div>\n      <div class=\"panel-body\">\n        <label>{{ battleResults }}</label>\n      </div>\n    </div>\n  </div>\n</div>\n</form>\n","export class User {\n\n  password: string;\n  username: string;\n\n  constructor(username: string, password: string) {\n    this.username =  username;\n    this.password = password\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Auth } from '../entities/auth';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from '../entities/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  isLoading: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService,\n    fb: FormBuilder) {\n    this.loginForm = fb.group({\n      username: [null, Validators.required],\n      password: [null, Validators.required]\n    });\n   }\n\n  ngOnInit(): void {\n    if (this.authService.isLogged()) {\n      this.router.navigateByUrl('/');\n    }\n  }\n\n  login() {\n    this.isLoading = true;\n    let user = new User(\n      this.loginForm.get('username').value,\n      this.loginForm.get('password').value\n      )\n    this.authService.login(user).subscribe(\n      res => {\n        this.authService.setToken(res.accessToken);\n        this.router.navigateByUrl('/');\n      }, err => {\n        this.toastr.error(err.error.message);\n        this.isLoading = false;\n      })\n  }\n\n\n\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n  <div class=\"flex-column flex-column-align-center\">\n    <div class=\"col-md-6\" >\n      <h1>Log in</h1>\n      <div class=\"col-md-12\">\n        <div class=\"field\">\n          <label>Username</label>\n          <input formControlName=\"username\" class=\"form-control\">\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"field\">\n          <label>Password</label>\n          <input formControlName=\"password\" class=\"form-control\" type=\"password\">\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"row u-margin-top-medium\" >\n          <div class=\"col-md-8\"></div>\n          <div class=\"actions offset-md-4 col-md-4 flex-row flex-row-justify-space-between\">\n            <button type=\"submit\" class=\"btn btn-primary\">\n              <span *ngIf=\"!isLoading\">Log in</span>\n              <div *ngIf=\"isLoading\" class=\"loader\"></div>\n            </button>\n            <a class=\"btn btn-success\" href=\"/sign_up\">Sign Up</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Auth } from '../entities/auth';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from '../entities/user';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n})\nexport class SignUpComponent {\n\n  signUpForm: FormGroup;\n  isLoading: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService,\n    fb: FormBuilder) {\n      this.signUpForm = fb.group({\n        username: [null, Validators.required],\n        password: [null, Validators.required],\n        confirmPassword: [null, Validators.required],\n      })\n    }\n\n  signUp() {\n    this.isLoading = true;\n    let user = new User(\n      this.signUpForm.get('username').value,\n      this.signUpForm.get('password').value\n      )\n    this.authService.signUp(user).subscribe(\n      (response) => {\n        this.login(user);\n      }, \n      (error) => {\n        this.toastr.error(error.error.message)\n        this.isLoading = false;\n      }\n    );\n  }\n\n  login(user: User) {\n    this.authService.login(user).subscribe(\n      res => {\n        this.authService.setToken(res.accessToken);\n        this.router.navigateByUrl('/');\n      })\n  }\n\n  validatePassword() {\n    return this.signUpForm.get('password').value === this.signUpForm.get('confirmPassword').value\n      || !this.signUpForm.get('password').dirty\n      || !this.signUpForm.get('confirmPassword').dirty\n  }\n\n  validateForm() {\n    return this.signUpForm.valid && this.validatePassword();\n  }\n\n}\n","<form [formGroup]=\"signUpForm\" (ngSubmit)=\"signUp()\">\n    <div class=\"flex-column flex-column-align-center\">\n      <div class=\"col-md-6\" >\n        <h1>Sign Up</h1>\n        <div class=\"col-md-12\">\n            <div class=\"field\">\n              <label>Username</label>\n              <input formControlName=\"username\" class=\"form-control\">\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n          <div class=\"field\">\n            <label>Password</label>\n            <input formControlName=\"password\" class=\"form-control\" type=\"password\">\n          </div>\n        </div>\n        <div class=\"col-md-12\">\n          <div class=\"field\">\n            <label>Confirm Password</label>\n            <input formControlName=\"confirmPassword\" class=\"form-control\" type=\"password\">\n          </div>\n        </div>\n        <p class=\"error-message\" *ngIf=\"!validatePassword()\">Password and Confirm Password are not matching</p>\n        <div class=\"col-md-12\">\n          <div class=\"actions right-div\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!validateForm()\">\n              <div *ngIf=\"!isLoading\">Sign Up</div>\n              <div *ngIf=\"isLoading\" class=\"loader\"></div>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  baseUrl: \"https://localhost:5001/api/\",\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}